{"ast":null,"code":"import _classCallCheck from \"/home/munishgrover/sachin_dashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/munishgrover/sachin_dashboard/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/munishgrover/sachin_dashboard/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/munishgrover/sachin_dashboard/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/munishgrover/sachin_dashboard/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/munishgrover/sachin_dashboard/src/components/Chart.js\";\nimport React, { Component } from 'react';\nimport { Bar, Line, Pie } from 'react-chartjs-2';\nimport * as d3 from 'd3';\nimport data from '../dataset/sachin.csv';\n\nvar Chart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Chart, _Component);\n\n  function Chart(props) {\n    var _this;\n\n    _classCallCheck(this, Chart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chart).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Chart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var currentComponent = this;\n      d3.csv(data).then(function (data) {\n        var colbatt = data.map(function (d) {\n          return {\n            col0: d.batting_score[0]\n          };\n        });\n        var testArray = Object.entries(colbatt).slice(0, 99).map(function (entry) {\n          return entry[1].col0;\n        }); //console.log(testArray.keys())\n\n        var test1;\n        var res = testArray.filter(function (x) {\n          return !isNaN(x);\n        });\n        console.log(res);\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = testArray[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var at = _step.value;\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        test1 = test1 / testArray.length;\n        console.log(test1);\n        var testArray2 = Object.entries(colbatt).slice(100, 200).map(function (entry) {\n          return entry[1].col0;\n        }); //console.log(typeof testArray2)\n\n        /*        var testArray3=Object.entries(colbatt).slice(151,200).map(entry => entry[1].col0);\n                console.log(testArray)\n        */\n\n        var testArray4 = Object.entries(colbatt).slice(201, 300).map(function (entry) {\n          return entry[1].col0;\n        }); //console.log(testArray4)\n\n        /*          var testArray5=Object.entries(colbatt).slice(251,299).map(entry => entry[1].col0);\n                  console.log(testArray)\n        */\n\n        var testArray6 = Object.entries(colbatt).slice(301, 400).map(function (entry) {\n          return entry[1].col0;\n        }); //console.log(testArray6)\n\n        /*var testArray7=Object.entries(colbatt).slice(400,462).map(entry => entry[1].col0);\n        console.log(testArray)\n        */\n\n        /* //const average = arr => arr.reduce((a,b) => a + b, 0) / arr.length\n         var test1=Math.max(testArray)\n         var test2=Math.max(testArray2)\n         /!*var test3=average(testArray3)\n         *!/var test4=Math.max(testArray4)\n         /!*var test5=average(testArray5)\n         *!/var test6=Math.max(testArray6)\n         /!*var test7=average(testArray7)\n         *!/\n         console.log(test1,test2,test4,test6)\n        */\n\n        currentComponent.setState({\n          data: {\n            labels: ['1989-1995', '1989-1995', '1995-1997', '1989-1995', '1989-1995', '1989-1995', '1989-1995'],\n            datasets: [{\n              data: [1, 2, 31, 12, 1, 4, 21, 1, 1],\n              backgroundColor: ['rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)', 'rgba(255, 206, 86, 0.6)', 'rgba(75, 192, 192, 0.6)', 'rgba(153, 102, 255, 0.6)', 'rgba(255, 159, 64, 0.6)', 'rgba(255, 99, 132, 0.6)']\n            }]\n          }\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var data = this.state.data;\n      return React.createElement(\"div\", {\n        className: \"chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Line, {\n        data: data,\n        width: 50,\n        height: 500,\n        options: {\n          maintainAspectRatio: false\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Chart;\n}(Component);\n\nexport default Chart;","map":{"version":3,"sources":["/home/munishgrover/sachin_dashboard/src/components/Chart.js"],"names":["React","Component","Bar","Line","Pie","d3","data","Chart","props","state","currentComponent","csv","then","colbatt","map","d","col0","batting_score","testArray","Object","entries","slice","entry","test1","res","filter","x","isNaN","console","log","at","length","testArray2","testArray4","testArray6","setState","labels","datasets","backgroundColor","catch","err","maintainAspectRatio"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport {Bar, Line, Pie} from 'react-chartjs-2';\nimport * as d3 from 'd3';\nimport data from '../dataset/sachin.csv';\n\n\n\n\nclass Chart extends Component{\n    constructor(props) {\n        super(props)\n        this.state={};\n    }\n\n    componentDidMount() {\n        let currentComponent = this;\n        d3.csv(data).then(function(data) {\n            var colbatt = data.map(function(d) {\n                return {\n\n                    col0: d.batting_score[0]\n                }\n            });\n               var testArray=Object.entries(colbatt).slice(0,99).map(entry => entry[1].col0);\n                //console.log(testArray.keys())\n            var test1;\n            let res=testArray.filter(x=>!isNaN(x))\n            console.log(res)\n            for(var at of testArray){\n\n            }\n            test1=test1/testArray.length\n            console.log(test1)\n        var testArray2=Object.entries(colbatt).slice(100,200).map(entry => entry[1].col0);\n            //console.log(typeof testArray2)\n    /*        var testArray3=Object.entries(colbatt).slice(151,200).map(entry => entry[1].col0);\n            console.log(testArray)\n    */        var testArray4=Object.entries(colbatt).slice(201,300).map(entry => entry[1].col0);\n            //console.log(testArray4)\n  /*          var testArray5=Object.entries(colbatt).slice(251,299).map(entry => entry[1].col0);\n            console.log(testArray)\n  */          var testArray6=Object.entries(colbatt).slice(301,400).map(entry => entry[1].col0);\n            //console.log(testArray6)\n            /*var testArray7=Object.entries(colbatt).slice(400,462).map(entry => entry[1].col0);\n            console.log(testArray)\n*/\n\n\n\n\n\n\n\n           /* //const average = arr => arr.reduce((a,b) => a + b, 0) / arr.length\n            var test1=Math.max(testArray)\n            var test2=Math.max(testArray2)\n            /!*var test3=average(testArray3)\n            *!/var test4=Math.max(testArray4)\n            /!*var test5=average(testArray5)\n            *!/var test6=Math.max(testArray6)\n            /!*var test7=average(testArray7)\n            *!/\n            console.log(test1,test2,test4,test6)\n*/\n\n            currentComponent.setState({data:{\n                    labels: ['1989-1995','1989-1995','1995-1997','1989-1995','1989-1995','1989-1995','1989-1995'],\n                    datasets:[\n                        {\n\n                            data:[1,2,31,12,1,4,21,1,1],\n                            backgroundColor:[\n                                'rgba(255, 99, 132, 0.6)',\n                                'rgba(54, 162, 235, 0.6)',\n                                'rgba(255, 206, 86, 0.6)',\n                                'rgba(75, 192, 192, 0.6)',\n                                'rgba(153, 102, 255, 0.6)',\n                                'rgba(255, 159, 64, 0.6)',\n                                'rgba(255, 99, 132, 0.6)'\n                            ]\n                        }\n                    ]\n\n\n                }})\n        }).catch(function(err) {\n            console.log(err)\n        })\n    }\n\n\n\n\n    render() {\n        const {data}=this.state;\n\n        return (\n            <div className=\"chart\">\n                <Line\n                    data={data}\n                    width={50}\n                    height={500}\n                    options={{ maintainAspectRatio: false }}\n                />\n            </div>\n        );\n    }\n}\nexport default  Chart;"]},"metadata":{},"sourceType":"module"}