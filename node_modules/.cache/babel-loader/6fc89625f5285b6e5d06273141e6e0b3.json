{"ast":null,"code":"import _classCallCheck from \"/home/munishgrover/sachin_dashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/munishgrover/sachin_dashboard/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/munishgrover/sachin_dashboard/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/munishgrover/sachin_dashboard/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/munishgrover/sachin_dashboard/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/munishgrover/sachin_dashboard/src/components/Chart.js\";\nimport React, { Component } from 'react';\nimport { Bar, Line, Pie } from 'react-chartjs-2';\nimport * as d3 from 'd3';\nimport data from '../dataset/sachin.csv';\n\nvar Chart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Chart, _Component);\n\n  function Chart(props) {\n    var _this;\n\n    _classCallCheck(this, Chart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chart).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Chart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var currentComponent = this;\n      d3.csv(data).then(function (data) {\n        var colbatt = data.map(function (d) {\n          return {\n            col0: d.batting_score[0]\n          };\n        });\n        var testArray = Object.entries(colbatt).slice(0, 99).map(function (entry) {\n          return entry[1].col0;\n        });\n        var res = testArray.filter(function (x) {\n          return !isNaN(x);\n        });\n        var t1 = 0;\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = res[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var at = _step.value;\n            t1 += at;\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        t1 = t1 / testArray.length;\n        console.log(t1);\n        var testArray2 = Object.entries(colbatt).slice(100, 200).map(function (entry) {\n          return entry[1].col0;\n        });\n        var res2 = testArray2.filter(function (x) {\n          return !isNaN(x);\n        });\n        var t2 = 0;\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = res2[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var at = _step2.value;\n            t2 += at;\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n\n        t2 = t2 / testArray.length;\n        console.log(t2);\n        var testArray4 = Object.entries(colbatt).slice(201, 300).map(function (entry) {\n          return entry[1].col0;\n        });\n        var res3 = testArray4.filter(function (x) {\n          return !isNaN(x);\n        });\n        var t3 = 0;\n        var _iteratorNormalCompletion3 = true;\n        var _didIteratorError3 = false;\n        var _iteratorError3 = undefined;\n\n        try {\n          for (var _iterator3 = res3[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n            var at = _step3.value;\n            t3 += at;\n          }\n        } catch (err) {\n          _didIteratorError3 = true;\n          _iteratorError3 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n              _iterator3.return();\n            }\n          } finally {\n            if (_didIteratorError3) {\n              throw _iteratorError3;\n            }\n          }\n        }\n\n        t3 = t3 / testArray.length;\n        console.log(t3);\n        var testArray6 = Object.entries(colbatt).slice(301, 400).map(function (entry) {\n          return entry[1].col0;\n        });\n        var res4 = testArray6.filter(function (x) {\n          return !isNaN(x);\n        });\n        var t4 = 0;\n        var _iteratorNormalCompletion4 = true;\n        var _didIteratorError4 = false;\n        var _iteratorError4 = undefined;\n\n        try {\n          for (var _iterator4 = res4[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n            var at = _step4.value;\n            t4 += at;\n          }\n        } catch (err) {\n          _didIteratorError4 = true;\n          _iteratorError4 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n              _iterator4.return();\n            }\n          } finally {\n            if (_didIteratorError4) {\n              throw _iteratorError4;\n            }\n          }\n        }\n\n        t4 = t4 / testArray.length;\n        console.log(t4);\n        /* //const average = arr => arr.reduce((a,b) => a + b, 0) / arr.length\n         var test1=Math.max(testArray)\n         var test2=Math.max(testArray2)\n         /!*var test3=average(testArray3)\n         *!/var test4=Math.max(testArray4)\n         /!*var test5=average(testArray5)\n         *!/var test6=Math.max(testArray6)\n         /!*var test7=average(testArray7)\n         *!/\n         console.log(test1,test2,test4,test6)\n        */\n\n        currentComponent.setState({\n          data: {\n            labels: ['1989-1995', '1989-1995', '1995-1997', '1989-1995', '1989-1995', '1989-1995', '1989-1995'],\n            datasets: [{\n              data: [t1, t2, t3, t4],\n              backgroundColor: ['rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)', 'rgba(255, 206, 86, 0.6)', 'rgba(75, 192, 192, 0.6)', 'rgba(153, 102, 255, 0.6)', 'rgba(255, 159, 64, 0.6)', 'rgba(255, 99, 132, 0.6)']\n            }]\n          }\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var data = this.state.data;\n      return React.createElement(\"div\", {\n        className: \"chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Line, {\n        data: data,\n        width: 50,\n        height: 500,\n        options: {\n          maintainAspectRatio: false\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Chart;\n}(Component);\n\nexport default Chart;","map":{"version":3,"sources":["/home/munishgrover/sachin_dashboard/src/components/Chart.js"],"names":["React","Component","Bar","Line","Pie","d3","data","Chart","props","state","currentComponent","csv","then","colbatt","map","d","col0","batting_score","testArray","Object","entries","slice","entry","res","filter","x","isNaN","t1","at","length","console","log","testArray2","res2","t2","testArray4","res3","t3","testArray6","res4","t4","setState","labels","datasets","backgroundColor","catch","err","maintainAspectRatio"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport {Bar, Line, Pie} from 'react-chartjs-2';\nimport * as d3 from 'd3';\nimport data from '../dataset/sachin.csv';\n\n\n\n\nclass Chart extends Component{\n    constructor(props) {\n        super(props)\n        this.state={};\n    }\n\n    componentDidMount() {\n        let currentComponent = this;\n        d3.csv(data).then(function(data) {\n            var colbatt = data.map(function(d) {\n                return {\n\n                    col0: d.batting_score[0]\n                }\n            });\n               var testArray=Object.entries(colbatt).slice(0,99).map(entry => entry[1].col0);\n            let res=testArray.filter(x=>!isNaN(x))\n            var t1=0\n            for(var at of res){\n                 t1 +=at;\n            }\n            t1=t1/testArray.length\n            console.log(t1)\n        var testArray2=Object.entries(colbatt).slice(100,200).map(entry => entry[1].col0);\n            let res2=testArray2.filter(x=>!isNaN(x))\n            var t2=0\n            for(var at of res2){\n                t2 +=at;\n            }\n            t2=t2/testArray.length\n            console.log(t2)\n\n\n            var testArray4=Object.entries(colbatt).slice(201,300).map(entry => entry[1].col0);\n            let res3=testArray4.filter(x=>!isNaN(x))\n            var t3=0\n            for(var at of res3){\n                t3 +=at;\n            }\n            t3=t3/testArray.length\n            console.log(t3)\n\n\n            var testArray6=Object.entries(colbatt).slice(301,400).map(entry => entry[1].col0);\n\n            let res4=testArray6.filter(x=>!isNaN(x))\n            var t4=0\n            for(var at of res4){\n                t4 +=at;\n            }\n            t4=t4/testArray.length\n            console.log(t4)\n\n\n\n\n\n\n\n            /* //const average = arr => arr.reduce((a,b) => a + b, 0) / arr.length\n             var test1=Math.max(testArray)\n             var test2=Math.max(testArray2)\n             /!*var test3=average(testArray3)\n             *!/var test4=Math.max(testArray4)\n             /!*var test5=average(testArray5)\n             *!/var test6=Math.max(testArray6)\n             /!*var test7=average(testArray7)\n             *!/\n             console.log(test1,test2,test4,test6)\n */\n\n            currentComponent.setState({data:{\n                    labels: ['1989-1995','1989-1995','1995-1997','1989-1995','1989-1995','1989-1995','1989-1995'],\n                    datasets:[\n                        {\n\n                            data:[t1,t2,t3,t4],\n                            backgroundColor:[\n                                'rgba(255, 99, 132, 0.6)',\n                                'rgba(54, 162, 235, 0.6)',\n                                'rgba(255, 206, 86, 0.6)',\n                                'rgba(75, 192, 192, 0.6)',\n                                'rgba(153, 102, 255, 0.6)',\n                                'rgba(255, 159, 64, 0.6)',\n                                'rgba(255, 99, 132, 0.6)'\n                            ]\n                        }\n                    ]\n\n\n                }})\n        }).catch(function(err) {\n            console.log(err)\n        })\n    }\n\n\n\n\n    render() {\n        const {data}=this.state;\n\n        return (\n            <div className=\"chart\">\n                <Line\n                    data={data}\n                    width={50}\n                    height={500}\n                    options={{ maintainAspectRatio: false }}\n                />\n            </div>\n        );\n    }\n}\nexport default  Chart;"]},"metadata":{},"sourceType":"module"}