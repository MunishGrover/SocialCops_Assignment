{"ast":null,"code":"import _classCallCheck from \"/home/munishgrover/sachin_dashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/munishgrover/sachin_dashboard/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/munishgrover/sachin_dashboard/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/munishgrover/sachin_dashboard/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/munishgrover/sachin_dashboard/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/munishgrover/sachin_dashboard/src/components/Chart.js\";\nimport React, { Component } from 'react';\nimport { Bar, Line, Pie } from 'react-chartjs-2';\nimport * as d3 from 'd3';\nimport data from '../dataset/sachin.csv';\n\nvar Chart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Chart, _Component);\n\n  function Chart(props) {\n    var _this;\n\n    _classCallCheck(this, Chart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chart).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Chart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var currentComponent = this;\n      d3.csv(data).then(function (data) {\n        var colbatt = data.map(function (d) {\n          return {\n            col0: d.batting_score\n          };\n        });\n        currentComponent.setState({\n          data: {\n            labels: ['Boston', 'Worcester', 'Springfield', 'Lowell', 'Cambridge', 'New Bedford'],\n            datasets: [{\n              label: 'Population',\n              data: colbatt,\n              backgroundColor: ['rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)', 'rgba(255, 206, 86, 0.6)', 'rgba(75, 192, 192, 0.6)', 'rgba(153, 102, 255, 0.6)', 'rgba(255, 159, 64, 0.6)', 'rgba(255, 99, 132, 0.6)']\n            }]\n          }\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var data = this.state.data;\n      return React.createElement(\"div\", {\n        className: \"chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Bar, {\n        data: data,\n        width: 1000,\n        height: 5000,\n        options: {\n          maintainAspectRatio: false\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Chart;\n}(Component);\n\nexport default Chart;","map":{"version":3,"sources":["/home/munishgrover/sachin_dashboard/src/components/Chart.js"],"names":["React","Component","Bar","Line","Pie","d3","data","Chart","props","state","currentComponent","csv","then","colbatt","map","d","col0","batting_score","setState","labels","datasets","label","backgroundColor","catch","err","console","log","maintainAspectRatio"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAAQC,GAAR,EAAaC,IAAb,EAAmBC,GAAnB,QAA6B,iBAA7B;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;;IAKMC,K;;;;;AACF,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,+EAAMA,KAAN;AACA,UAAKC,KAAL,GAAW,EAAX;AAFe;AAGlB;;;;wCAEmB;AAChB,UAAIC,gBAAgB,GAAG,IAAvB;AACAL,MAAAA,EAAE,CAACM,GAAH,CAAOL,IAAP,EAAaM,IAAb,CAAkB,UAASN,IAAT,EAAe;AAC7B,YAAIO,OAAO,GAAGP,IAAI,CAACQ,GAAL,CAAS,UAASC,CAAT,EAAY;AAC/B,iBAAO;AACHC,YAAAA,IAAI,EAAED,CAAC,CAACE;AADL,WAAP;AAGH,SAJa,CAAd;AAMAP,QAAAA,gBAAgB,CAACQ,QAAjB,CAA0B;AAACZ,UAAAA,IAAI,EAAC;AACxBa,YAAAA,MAAM,EAAE,CAAC,QAAD,EAAW,WAAX,EAAwB,aAAxB,EAAuC,QAAvC,EAAiD,WAAjD,EAA8D,aAA9D,CADgB;AAExBC,YAAAA,QAAQ,EAAC,CACL;AACIC,cAAAA,KAAK,EAAC,YADV;AAEIf,cAAAA,IAAI,EAACO,OAFT;AAGIS,cAAAA,eAAe,EAAC,CACZ,yBADY,EAEZ,yBAFY,EAGZ,yBAHY,EAIZ,yBAJY,EAKZ,0BALY,EAMZ,yBANY,EAOZ,yBAPY;AAHpB,aADK;AAFe;AAAN,SAA1B;AAoBH,OA3BD,EA2BGC,KA3BH,CA2BS,UAASC,GAAT,EAAc;AACnBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,OA7BD;AA8BH;;;6BAKQ;AAAA,UACElB,IADF,GACQ,KAAKG,KADb,CACEH,IADF;AAGL,aACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AACI,QAAA,IAAI,EAAEA,IADV;AAEI,QAAA,KAAK,EAAE,IAFX;AAGI,QAAA,MAAM,EAAE,IAHZ;AAII,QAAA,OAAO,EAAE;AAAEqB,UAAAA,mBAAmB,EAAE;AAAvB,SAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAUH;;;;EAxDe1B,S;;AA0DpB,eAAgBM,KAAhB","sourcesContent":["import React,{Component} from 'react';\nimport {Bar, Line, Pie} from 'react-chartjs-2';\nimport * as d3 from 'd3';\nimport data from '../dataset/sachin.csv';\n\n\n\n\nclass Chart extends Component{\n    constructor(props) {\n        super(props)\n        this.state={};\n    }\n\n    componentDidMount() {\n        let currentComponent = this;\n        d3.csv(data).then(function(data) {\n            var colbatt = data.map(function(d) {\n                return {\n                    col0: d.batting_score\n                }\n            });\n\n            currentComponent.setState({data:{\n                    labels: ['Boston', 'Worcester', 'Springfield', 'Lowell', 'Cambridge', 'New Bedford'],\n                    datasets:[\n                        {\n                            label:'Population',\n                            data:colbatt,\n                            backgroundColor:[\n                                'rgba(255, 99, 132, 0.6)',\n                                'rgba(54, 162, 235, 0.6)',\n                                'rgba(255, 206, 86, 0.6)',\n                                'rgba(75, 192, 192, 0.6)',\n                                'rgba(153, 102, 255, 0.6)',\n                                'rgba(255, 159, 64, 0.6)',\n                                'rgba(255, 99, 132, 0.6)'\n                            ]\n                        }\n                    ]\n\n\n                }})\n        }).catch(function(err) {\n            console.log(err)\n        })\n    }\n\n\n\n\n    render() {\n        const {data}=this.state;\n\n        return (\n            <div className=\"chart\">\n                <Bar\n                    data={data}\n                    width={1000}\n                    height={5000}\n                    options={{ maintainAspectRatio: false }}\n                />\n            </div>\n        );\n    }\n}\nexport default  Chart;"]},"metadata":{},"sourceType":"module"}