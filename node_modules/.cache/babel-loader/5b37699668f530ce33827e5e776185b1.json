{"ast":null,"code":"import _classCallCheck from \"/home/munishgrover/sachin_dashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/munishgrover/sachin_dashboard/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/munishgrover/sachin_dashboard/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/munishgrover/sachin_dashboard/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/munishgrover/sachin_dashboard/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/munishgrover/sachin_dashboard/src/components/Chart.js\";\nimport React, { Component } from 'react';\nimport { Bar, Line, Pie } from 'react-chartjs-2';\nimport * as d3 from 'd3';\nimport data from '../dataset/sachin.csv';\nimport dravid from '../dataset/dravid.csv';\nimport ganguly from '../dataset/ganguly.csv';\nimport sehwag from '../dataset/sehwag.csv';\n\nvar Chart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Chart, _Component);\n\n  function Chart(props) {\n    var _this;\n\n    _classCallCheck(this, Chart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chart).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Chart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var currentComponent = this;\n      var hello;\n      var hellogan;\n      var hellosew; //dravid\n\n      d3.csv(dravid).then(function (data) {\n        //console.log('dravid sir data'+data)\n        var colbatt1 = data.map(function (d) {\n          return {\n            Runs: d.Runs\n          };\n        });\n        console.log('dravid ka maal');\n        console.log(colbatt1);\n        var testArraydr = Object.entries(colbatt1).slice(0, 49).map(function (entry) {\n          return entry[1].Runs;\n        });\n        var resdr = testArraydr.filter(function (x) {\n          return !isNaN(x);\n        });\n        var t1dr = 0;\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = resdr[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var at = _step.value;\n            t1dr += parseInt(at);\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        t1dr = t1dr / testArraydr.length;\n        console.log('first avg of dravid sir' + t1dr);\n        var testArraydr1 = Object.entries(colbatt1).slice(50, 99).map(function (entry) {\n          return entry[1].Runs;\n        });\n        var resdr1 = testArraydr1.filter(function (x) {\n          return !isNaN(x);\n        });\n        var t1dr1 = 0;\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = resdr1[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var at = _step2.value;\n            t1dr1 += parseInt(at);\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n\n        t1dr1 = t1dr1 / testArraydr.length;\n        console.log('first avg of dravid sir' + t1dr1);\n        var testArraydr2 = Object.entries(colbatt1).slice(100, 149).map(function (entry) {\n          return entry[1].Runs;\n        });\n        var resdr2 = testArraydr2.filter(function (x) {\n          return !isNaN(x);\n        });\n        var t1dr2 = 0;\n        var _iteratorNormalCompletion3 = true;\n        var _didIteratorError3 = false;\n        var _iteratorError3 = undefined;\n\n        try {\n          for (var _iterator3 = resdr2[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n            var at = _step3.value;\n            t1dr2 += parseInt(at);\n          }\n        } catch (err) {\n          _didIteratorError3 = true;\n          _iteratorError3 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n              _iterator3.return();\n            }\n          } finally {\n            if (_didIteratorError3) {\n              throw _iteratorError3;\n            }\n          }\n        }\n\n        t1dr2 = t1dr2 / testArraydr.length;\n        console.log('first avg of dravid sir' + t1dr2);\n        var testArraydr3 = Object.entries(colbatt1).slice(150, 199).map(function (entry) {\n          return entry[1].Runs;\n        });\n        var resdr3 = testArraydr3.filter(function (x) {\n          return !isNaN(x);\n        });\n        var t1dr3 = 0;\n        var _iteratorNormalCompletion4 = true;\n        var _didIteratorError4 = false;\n        var _iteratorError4 = undefined;\n\n        try {\n          for (var _iterator4 = resdr3[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n            var at = _step4.value;\n            t1dr3 += parseInt(at);\n          }\n        } catch (err) {\n          _didIteratorError4 = true;\n          _iteratorError4 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n              _iterator4.return();\n            }\n          } finally {\n            if (_didIteratorError4) {\n              throw _iteratorError4;\n            }\n          }\n        }\n\n        t1dr3 = t1dr3 / testArraydr.length;\n        console.log('first avg of dravid sir' + t1dr3);\n        var testArraydr4 = Object.entries(colbatt1).slice(200, 249).map(function (entry) {\n          return entry[1].Runs;\n        });\n        var resdr4 = testArraydr4.filter(function (x) {\n          return !isNaN(x);\n        });\n        var t1dr4 = 0;\n        var _iteratorNormalCompletion5 = true;\n        var _didIteratorError5 = false;\n        var _iteratorError5 = undefined;\n\n        try {\n          for (var _iterator5 = resdr4[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n            var at = _step5.value;\n            t1dr4 += parseInt(at);\n          }\n        } catch (err) {\n          _didIteratorError5 = true;\n          _iteratorError5 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n              _iterator5.return();\n            }\n          } finally {\n            if (_didIteratorError5) {\n              throw _iteratorError5;\n            }\n          }\n        }\n\n        t1dr4 = t1dr4 / testArraydr.length;\n        console.log('first avg of dravid sir' + t1dr4);\n        var testArraydr5 = Object.entries(colbatt1).slice(249, 295).map(function (entry) {\n          return entry[1].Runs;\n        });\n        var resdr5 = testArraydr5.filter(function (x) {\n          return !isNaN(x);\n        });\n        var t1dr5 = 0;\n        var _iteratorNormalCompletion6 = true;\n        var _didIteratorError6 = false;\n        var _iteratorError6 = undefined;\n\n        try {\n          for (var _iterator6 = resdr5[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n            var at = _step6.value;\n            t1dr5 += parseInt(at);\n          }\n        } catch (err) {\n          _didIteratorError6 = true;\n          _iteratorError6 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n              _iterator6.return();\n            }\n          } finally {\n            if (_didIteratorError6) {\n              throw _iteratorError6;\n            }\n          }\n        }\n\n        t1dr5 = t1dr5 / testArraydr.length;\n        console.log('first avg of dravid sir' + t1dr5);\n        hello = [t1dr, t1dr1, t1dr2, t1dr3, t1dr4, t1dr5];\n        console.log('Dravid ka maal');\n      }); //gangully\n\n      d3.csv(ganguly).then(function (data) {\n        //console.log('dravid sir data'+data)\n        var colbatt2 = data.map(function (d) {\n          return {\n            Runs: d.Runs\n          };\n        });\n        console.log('gangully ka maal');\n        console.log(colbatt2);\n        var testArraygu = Object.entries(colbatt2).slice(0, 49).map(function (entry) {\n          return entry[1].Runs;\n        });\n        var resgu = testArraygu.filter(function (x) {\n          return !isNaN(x);\n        });\n        var t1gu = 0;\n        var _iteratorNormalCompletion7 = true;\n        var _didIteratorError7 = false;\n        var _iteratorError7 = undefined;\n\n        try {\n          for (var _iterator7 = resgu[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n            var at = _step7.value;\n            t1gu += parseInt(at);\n          }\n        } catch (err) {\n          _didIteratorError7 = true;\n          _iteratorError7 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n              _iterator7.return();\n            }\n          } finally {\n            if (_didIteratorError7) {\n              throw _iteratorError7;\n            }\n          }\n        }\n\n        t1gu = t1gu / testArraygu.length;\n        console.log('first avg of dravid sir' + t1gu);\n        var testArraygu1 = Object.entries(colbatt2).slice(50, 99).map(function (entry) {\n          return entry[1].Runs;\n        });\n        var resgu1 = testArraygu1.filter(function (x) {\n          return !isNaN(x);\n        });\n        var t1gu1 = 0;\n        var _iteratorNormalCompletion8 = true;\n        var _didIteratorError8 = false;\n        var _iteratorError8 = undefined;\n\n        try {\n          for (var _iterator8 = resgu1[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n            var at = _step8.value;\n            t1gu1 += parseInt(at);\n          }\n        } catch (err) {\n          _didIteratorError8 = true;\n          _iteratorError8 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n              _iterator8.return();\n            }\n          } finally {\n            if (_didIteratorError8) {\n              throw _iteratorError8;\n            }\n          }\n        }\n\n        t1gu1 = t1gu1 / testArraygu1.length;\n        console.log('first avg of dravid sir' + t1gu1);\n        var testArraygu2 = Object.entries(colbatt2).slice(100, 149).map(function (entry) {\n          return entry[1].Runs;\n        });\n        var resgu2 = testArraygu2.filter(function (x) {\n          return !isNaN(x);\n        });\n        var t1gu2 = 0;\n        var _iteratorNormalCompletion9 = true;\n        var _didIteratorError9 = false;\n        var _iteratorError9 = undefined;\n\n        try {\n          for (var _iterator9 = resgu2[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n            var at = _step9.value;\n            t1gu2 += parseInt(at);\n          }\n        } catch (err) {\n          _didIteratorError9 = true;\n          _iteratorError9 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion9 && _iterator9.return != null) {\n              _iterator9.return();\n            }\n          } finally {\n            if (_didIteratorError9) {\n              throw _iteratorError9;\n            }\n          }\n        }\n\n        t1gu2 = t1gu2 / testArraygu2.length;\n        console.log('first avg of dravid sir' + t1gu2);\n        var testArraygu3 = Object.entries(colbatt2).slice(150, 169).map(function (entry) {\n          return entry[1].Runs;\n        });\n        var resgu3 = testArraygu3.filter(function (x) {\n          return !isNaN(x);\n        });\n        var t1gu3 = 0;\n        var _iteratorNormalCompletion10 = true;\n        var _didIteratorError10 = false;\n        var _iteratorError10 = undefined;\n\n        try {\n          for (var _iterator10 = resgu3[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n            var at = _step10.value;\n            t1gu3 += parseInt(at);\n          }\n        } catch (err) {\n          _didIteratorError10 = true;\n          _iteratorError10 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion10 && _iterator10.return != null) {\n              _iterator10.return();\n            }\n          } finally {\n            if (_didIteratorError10) {\n              throw _iteratorError10;\n            }\n          }\n        }\n\n        t1gu3 = t1gu3 / testArraygu3.length;\n        console.log('first avg of ganguly sir' + t1gu3);\n        var testArraygu4 = Object.entries(colbatt2).slice(170, 189).map(function (entry) {\n          return entry[1].Runs;\n        });\n        var resgu4 = testArraygu4.filter(function (x) {\n          return !isNaN(x);\n        });\n        var t1gu4 = 0;\n        var _iteratorNormalCompletion11 = true;\n        var _didIteratorError11 = false;\n        var _iteratorError11 = undefined;\n\n        try {\n          for (var _iterator11 = resgu4[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n            var at = _step11.value;\n            t1gu4 += parseInt(at);\n          }\n        } catch (err) {\n          _didIteratorError11 = true;\n          _iteratorError11 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion11 && _iterator11.return != null) {\n              _iterator11.return();\n            }\n          } finally {\n            if (_didIteratorError11) {\n              throw _iteratorError11;\n            }\n          }\n        }\n\n        t1gu4 = t1gu4 / testArraygu4.length;\n        console.log('first avg of ganguly sir' + t1gu4);\n        var testArraygu5 = Object.entries(colbatt2).slice(190, 201).map(function (entry) {\n          return entry[1].Runs;\n        });\n        var resgu5 = testArraygu5.filter(function (x) {\n          return !isNaN(x);\n        });\n        var t1gu5 = 0;\n        var _iteratorNormalCompletion12 = true;\n        var _didIteratorError12 = false;\n        var _iteratorError12 = undefined;\n\n        try {\n          for (var _iterator12 = resgu5[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n            var at = _step12.value;\n            t1gu5 += parseInt(at);\n          }\n        } catch (err) {\n          _didIteratorError12 = true;\n          _iteratorError12 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion12 && _iterator12.return != null) {\n              _iterator12.return();\n            }\n          } finally {\n            if (_didIteratorError12) {\n              throw _iteratorError12;\n            }\n          }\n        }\n\n        t1gu5 = t1gu5 / testArraygu5.length;\n        console.log('first avg of ganguly sir' + t1gu5);\n        hellogan = [t1gu, t1gu1, t1gu2, t1gu3, t1gu4, t1gu5];\n        console.log('gangully ka maal');\n      }); //Sehwag\n\n      d3.csv(sehwag).then(function (data) {\n        //console.log('dravid sir data'+data)\n        var colbatt3 = data.map(function (d) {\n          return {\n            Runs: d.Runs\n          };\n        });\n        console.log('sehwag ka maal');\n        console.log(colbatt3);\n        var testArrayse = Object.entries(colbatt3).slice(0, 29).map(function (entry) {\n          return entry[1].Runs;\n        });\n        var resse = testArrayse.filter(function (x) {\n          return !isNaN(x);\n        });\n        var t1se = 0;\n        var _iteratorNormalCompletion13 = true;\n        var _didIteratorError13 = false;\n        var _iteratorError13 = undefined;\n\n        try {\n          for (var _iterator13 = resse[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n            var at = _step13.value;\n            t1se += parseInt(at);\n          }\n        } catch (err) {\n          _didIteratorError13 = true;\n          _iteratorError13 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion13 && _iterator13.return != null) {\n              _iterator13.return();\n            }\n          } finally {\n            if (_didIteratorError13) {\n              throw _iteratorError13;\n            }\n          }\n        }\n\n        t1se = t1se / testArrayse.length;\n        console.log('first avg of dravid sir' + t1se);\n        var testArrayse1 = Object.entries(colbatt3).slice(30, 59).map(function (entry) {\n          return entry[1].Runs;\n        });\n        var resse1 = testArrayse1.filter(function (x) {\n          return !isNaN(x);\n        });\n        var t1se1 = 0;\n        var _iteratorNormalCompletion14 = true;\n        var _didIteratorError14 = false;\n        var _iteratorError14 = undefined;\n\n        try {\n          for (var _iterator14 = resse1[Symbol.iterator](), _step14; !(_iteratorNormalCompletion14 = (_step14 = _iterator14.next()).done); _iteratorNormalCompletion14 = true) {\n            var at = _step14.value;\n            t1se1 += parseInt(at);\n          }\n        } catch (err) {\n          _didIteratorError14 = true;\n          _iteratorError14 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion14 && _iterator14.return != null) {\n              _iterator14.return();\n            }\n          } finally {\n            if (_didIteratorError14) {\n              throw _iteratorError14;\n            }\n          }\n        }\n\n        t1se1 = t1se1 / testArrayse1.length;\n        console.log('first avg of dravid sir' + t1se1);\n        var testArrayse2 = Object.entries(colbatt3).slice(60, 99).map(function (entry) {\n          return entry[1].Runs;\n        });\n        var resse2 = testArrayse2.filter(function (x) {\n          return !isNaN(x);\n        });\n        var t1se2 = 0;\n        var _iteratorNormalCompletion15 = true;\n        var _didIteratorError15 = false;\n        var _iteratorError15 = undefined;\n\n        try {\n          for (var _iterator15 = resse2[Symbol.iterator](), _step15; !(_iteratorNormalCompletion15 = (_step15 = _iterator15.next()).done); _iteratorNormalCompletion15 = true) {\n            var at = _step15.value;\n            t1se2 += parseInt(at);\n          }\n        } catch (err) {\n          _didIteratorError15 = true;\n          _iteratorError15 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion15 && _iterator15.return != null) {\n              _iterator15.return();\n            }\n          } finally {\n            if (_didIteratorError15) {\n              throw _iteratorError15;\n            }\n          }\n        }\n\n        t1se2 = t1se2 / testArrayse2.length;\n        console.log('first avg of dravid sir' + t1se2);\n        var testArrayse3 = Object.entries(colbatt3).slice(100, 129).map(function (entry) {\n          return entry[1].Runs;\n        });\n        var resse3 = testArrayse3.filter(function (x) {\n          return !isNaN(x);\n        });\n        var t1se3 = 0;\n        var _iteratorNormalCompletion16 = true;\n        var _didIteratorError16 = false;\n        var _iteratorError16 = undefined;\n\n        try {\n          for (var _iterator16 = resse3[Symbol.iterator](), _step16; !(_iteratorNormalCompletion16 = (_step16 = _iterator16.next()).done); _iteratorNormalCompletion16 = true) {\n            var at = _step16.value;\n            t1se3 += parseInt(at);\n          }\n        } catch (err) {\n          _didIteratorError16 = true;\n          _iteratorError16 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion16 && _iterator16.return != null) {\n              _iterator16.return();\n            }\n          } finally {\n            if (_didIteratorError16) {\n              throw _iteratorError16;\n            }\n          }\n        }\n\n        t1se3 = t1se3 / testArrayse3.length;\n        console.log('first avg of ganguly sir' + t1se3);\n        var testArrayse4 = Object.entries(colbatt3).slice(130, 159).map(function (entry) {\n          return entry[1].Runs;\n        });\n        var resse4 = testArrayse4.filter(function (x) {\n          return !isNaN(x);\n        });\n        var t1se4 = 0;\n        var _iteratorNormalCompletion17 = true;\n        var _didIteratorError17 = false;\n        var _iteratorError17 = undefined;\n\n        try {\n          for (var _iterator17 = resse4[Symbol.iterator](), _step17; !(_iteratorNormalCompletion17 = (_step17 = _iterator17.next()).done); _iteratorNormalCompletion17 = true) {\n            var at = _step17.value;\n            t1se4 += parseInt(at);\n          }\n        } catch (err) {\n          _didIteratorError17 = true;\n          _iteratorError17 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion17 && _iterator17.return != null) {\n              _iterator17.return();\n            }\n          } finally {\n            if (_didIteratorError17) {\n              throw _iteratorError17;\n            }\n          }\n        }\n\n        t1se4 = t1se4 / testArrayse4.length;\n        console.log('first avg of ganguly sir' + t1se4);\n        var testArrayse5 = Object.entries(colbatt3).slice(160, 177).map(function (entry) {\n          return entry[1].Runs;\n        });\n        var resse5 = testArrayse5.filter(function (x) {\n          return !isNaN(x);\n        });\n        var t1se5 = 0;\n        var _iteratorNormalCompletion18 = true;\n        var _didIteratorError18 = false;\n        var _iteratorError18 = undefined;\n\n        try {\n          for (var _iterator18 = resse5[Symbol.iterator](), _step18; !(_iteratorNormalCompletion18 = (_step18 = _iterator18.next()).done); _iteratorNormalCompletion18 = true) {\n            var at = _step18.value;\n            t1se5 += parseInt(at);\n          }\n        } catch (err) {\n          _didIteratorError18 = true;\n          _iteratorError18 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion18 && _iterator18.return != null) {\n              _iterator18.return();\n            }\n          } finally {\n            if (_didIteratorError18) {\n              throw _iteratorError18;\n            }\n          }\n        }\n\n        t1se5 = t1se5 / testArrayse5.length;\n        console.log('first avg of sehwag sir' + t1se5);\n        hellosew = [t1se, t1se1, t1se2, t1se3, t1se4, t1se5];\n        console.log('hello sehwag' + hellosew);\n        console.log('sehwag ka maal');\n      }); //sachin\n\n      d3.csv(data).then(function (data) {\n        var colbatt = data.map(function (d) {\n          return {\n            col0: d.batting_score[0]\n          };\n        });\n        var testArray = Object.entries(colbatt).slice(0, 99).map(function (entry) {\n          return entry[1].col0;\n        });\n        var res = testArray.filter(function (x) {\n          return !isNaN(x);\n        });\n        var t1 = 0;\n        var _iteratorNormalCompletion19 = true;\n        var _didIteratorError19 = false;\n        var _iteratorError19 = undefined;\n\n        try {\n          for (var _iterator19 = res[Symbol.iterator](), _step19; !(_iteratorNormalCompletion19 = (_step19 = _iterator19.next()).done); _iteratorNormalCompletion19 = true) {\n            var at = _step19.value;\n            t1 += parseInt(at);\n          }\n        } catch (err) {\n          _didIteratorError19 = true;\n          _iteratorError19 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion19 && _iterator19.return != null) {\n              _iterator19.return();\n            }\n          } finally {\n            if (_didIteratorError19) {\n              throw _iteratorError19;\n            }\n          }\n        }\n\n        t1 = t1 / testArray.length;\n        console.log(t1);\n        var testArray3 = Object.entries(colbatt).slice(150, 249).map(function (entry) {\n          return entry[1].col0;\n        });\n        var res5 = testArray3.filter(function (x) {\n          return !isNaN(x);\n        });\n        var t5 = 0;\n        var _iteratorNormalCompletion20 = true;\n        var _didIteratorError20 = false;\n        var _iteratorError20 = undefined;\n\n        try {\n          for (var _iterator20 = res5[Symbol.iterator](), _step20; !(_iteratorNormalCompletion20 = (_step20 = _iterator20.next()).done); _iteratorNormalCompletion20 = true) {\n            var at = _step20.value;\n            t5 += parseInt(at);\n          }\n        } catch (err) {\n          _didIteratorError20 = true;\n          _iteratorError20 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion20 && _iterator20.return != null) {\n              _iterator20.return();\n            }\n          } finally {\n            if (_didIteratorError20) {\n              throw _iteratorError20;\n            }\n          }\n        }\n\n        t5 = t5 / testArray3.length;\n        console.log(t5);\n        var testArray2 = Object.entries(colbatt).slice(100, 149).map(function (entry) {\n          return entry[1].col0;\n        });\n        var res2 = testArray2.filter(function (x) {\n          return !isNaN(x);\n        });\n        var t2 = 0;\n        var _iteratorNormalCompletion21 = true;\n        var _didIteratorError21 = false;\n        var _iteratorError21 = undefined;\n\n        try {\n          for (var _iterator21 = res2[Symbol.iterator](), _step21; !(_iteratorNormalCompletion21 = (_step21 = _iterator21.next()).done); _iteratorNormalCompletion21 = true) {\n            var at = _step21.value;\n            t2 += parseInt(at);\n          }\n        } catch (err) {\n          _didIteratorError21 = true;\n          _iteratorError21 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion21 && _iterator21.return != null) {\n              _iterator21.return();\n            }\n          } finally {\n            if (_didIteratorError21) {\n              throw _iteratorError21;\n            }\n          }\n        }\n\n        t2 = t2 / testArray2.length;\n        console.log(t2);\n        var testArray5 = Object.entries(colbatt).slice(401, 463).map(function (entry) {\n          return entry[1].col0;\n        });\n        var res6 = testArray5.filter(function (x) {\n          return !isNaN(x);\n        });\n        var t6 = 0;\n        var _iteratorNormalCompletion22 = true;\n        var _didIteratorError22 = false;\n        var _iteratorError22 = undefined;\n\n        try {\n          for (var _iterator22 = res6[Symbol.iterator](), _step22; !(_iteratorNormalCompletion22 = (_step22 = _iterator22.next()).done); _iteratorNormalCompletion22 = true) {\n            var at = _step22.value;\n            t6 += parseInt(at);\n          }\n        } catch (err) {\n          _didIteratorError22 = true;\n          _iteratorError22 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion22 && _iterator22.return != null) {\n              _iterator22.return();\n            }\n          } finally {\n            if (_didIteratorError22) {\n              throw _iteratorError22;\n            }\n          }\n        }\n\n        t6 = t6 / testArray5.length;\n        console.log(t6);\n        var testArray7 = Object.entries(colbatt).slice(250, 300).map(function (entry) {\n          return entry[1].col0;\n        });\n        var res7 = testArray7.filter(function (x) {\n          return !isNaN(x);\n        });\n        var t7 = 0;\n        var _iteratorNormalCompletion23 = true;\n        var _didIteratorError23 = false;\n        var _iteratorError23 = undefined;\n\n        try {\n          for (var _iterator23 = res7[Symbol.iterator](), _step23; !(_iteratorNormalCompletion23 = (_step23 = _iterator23.next()).done); _iteratorNormalCompletion23 = true) {\n            var at = _step23.value;\n            t7 += parseInt(at);\n          }\n        } catch (err) {\n          _didIteratorError23 = true;\n          _iteratorError23 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion23 && _iterator23.return != null) {\n              _iterator23.return();\n            }\n          } finally {\n            if (_didIteratorError23) {\n              throw _iteratorError23;\n            }\n          }\n        }\n\n        t7 = t7 / testArray7.length;\n        console.log(t7);\n        var testArray6 = Object.entries(colbatt).slice(301, 400).map(function (entry) {\n          return entry[1].col0;\n        });\n        var res4 = testArray6.filter(function (x) {\n          return !isNaN(x);\n        });\n        var t4 = 0;\n        var _iteratorNormalCompletion24 = true;\n        var _didIteratorError24 = false;\n        var _iteratorError24 = undefined;\n\n        try {\n          for (var _iterator24 = res4[Symbol.iterator](), _step24; !(_iteratorNormalCompletion24 = (_step24 = _iterator24.next()).done); _iteratorNormalCompletion24 = true) {\n            var at = _step24.value;\n            t4 += parseInt(at);\n          }\n        } catch (err) {\n          _didIteratorError24 = true;\n          _iteratorError24 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion24 && _iterator24.return != null) {\n              _iterator24.return();\n            }\n          } finally {\n            if (_didIteratorError24) {\n              throw _iteratorError24;\n            }\n          }\n        }\n\n        t4 = t4 / testArray6.length;\n        console.log(t4);\n        var localHello = [];\n        var _iteratorNormalCompletion25 = true;\n        var _didIteratorError25 = false;\n        var _iteratorError25 = undefined;\n\n        try {\n          for (var _iterator25 = hello[Symbol.iterator](), _step25; !(_iteratorNormalCompletion25 = (_step25 = _iterator25.next()).done); _iteratorNormalCompletion25 = true) {\n            var it = _step25.value;\n            localHello.push(it);\n          }\n        } catch (err) {\n          _didIteratorError25 = true;\n          _iteratorError25 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion25 && _iterator25.return != null) {\n              _iterator25.return();\n            }\n          } finally {\n            if (_didIteratorError25) {\n              throw _iteratorError25;\n            }\n          }\n        }\n\n        console.log(localHello);\n        var localHelloGan = [];\n        var _iteratorNormalCompletion26 = true;\n        var _didIteratorError26 = false;\n        var _iteratorError26 = undefined;\n\n        try {\n          for (var _iterator26 = hellogan[Symbol.iterator](), _step26; !(_iteratorNormalCompletion26 = (_step26 = _iterator26.next()).done); _iteratorNormalCompletion26 = true) {\n            var it = _step26.value;\n            localHelloGan.push(it);\n          }\n        } catch (err) {\n          _didIteratorError26 = true;\n          _iteratorError26 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion26 && _iterator26.return != null) {\n              _iterator26.return();\n            }\n          } finally {\n            if (_didIteratorError26) {\n              throw _iteratorError26;\n            }\n          }\n        }\n\n        console.log(localHelloGan);\n        var localHelloSew = [];\n        var _iteratorNormalCompletion27 = true;\n        var _didIteratorError27 = false;\n        var _iteratorError27 = undefined;\n\n        try {\n          for (var _iterator27 = hellosew[Symbol.iterator](), _step27; !(_iteratorNormalCompletion27 = (_step27 = _iterator27.next()).done); _iteratorNormalCompletion27 = true) {\n            var it = _step27.value;\n            localHelloSew.push(it);\n          }\n        } catch (err) {\n          _didIteratorError27 = true;\n          _iteratorError27 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion27 && _iterator27.return != null) {\n              _iterator27.return();\n            }\n          } finally {\n            if (_didIteratorError27) {\n              throw _iteratorError27;\n            }\n          }\n        }\n\n        console.log('hello from above' + localHelloSew);\n        currentComponent.setState({\n          data: {\n            labels: ['1989-1995', '1995-1997', '1997-2000', '2000-2002', '2003-2007', '2007-2012'],\n            backgroundColor: '#23BFAA',\n            datasets: [{\n              label: \"Sachin\",\n              fill: false,\n              borderColor: \"rgba(32, 162, 219)\",\n              // <-- supposed to be light blue\n              data: [t1 * 10, t2 * 10, t5 * 10, t7 * 10, t4 * 10, t6 * 10]\n            }, {\n              label: \"Dravid\",\n              fill: false,\n              borderColor: \"rgba(196, 93, 105)\",\n              data: localHello\n            }, {\n              label: \"Gangully\",\n              fill: false,\n              borderColor: \"rgba(0,0,255)\",\n              data: localHelloGan\n            }, {\n              label: \"Sehwag\",\n              fill: false,\n              borderColor: \"rgba(255,127,80)\",\n              data: localHelloSew\n            }]\n          },\n          options: {\n            scales: {\n              yAxes: [{\n                ticks: {\n                  beginAtZero: true\n                },\n                scaleLabel: {\n                  display: true,\n                  labelString: 'Moola',\n                  fontSize: 20\n                }\n              }]\n            }\n          }\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var data = this.state.data;\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409\n        },\n        __self: this\n      }, React.createElement(Line, {\n        data: data,\n        width: 50,\n        height: 500,\n        options: {\n          maintainAspectRatio: false\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        style: {\n          height: 300\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419\n        },\n        __self: this\n      }, \"hello\"), \"            \"));\n    }\n  }]);\n\n  return Chart;\n}(Component);\n\nexport default Chart;","map":{"version":3,"sources":["/home/munishgrover/sachin_dashboard/src/components/Chart.js"],"names":["React","Component","Bar","Line","Pie","d3","data","dravid","ganguly","sehwag","Chart","props","state","currentComponent","hello","hellogan","hellosew","csv","then","colbatt1","map","d","Runs","console","log","testArraydr","Object","entries","slice","entry","resdr","filter","x","isNaN","t1dr","at","parseInt","length","testArraydr1","resdr1","t1dr1","testArraydr2","resdr2","t1dr2","testArraydr3","resdr3","t1dr3","testArraydr4","resdr4","t1dr4","testArraydr5","resdr5","t1dr5","colbatt2","testArraygu","resgu","t1gu","testArraygu1","resgu1","t1gu1","testArraygu2","resgu2","t1gu2","testArraygu3","resgu3","t1gu3","testArraygu4","resgu4","t1gu4","testArraygu5","resgu5","t1gu5","colbatt3","testArrayse","resse","t1se","testArrayse1","resse1","t1se1","testArrayse2","resse2","t1se2","testArrayse3","resse3","t1se3","testArrayse4","resse4","t1se4","testArrayse5","resse5","t1se5","colbatt","col0","batting_score","testArray","res","t1","testArray3","res5","t5","testArray2","res2","t2","testArray5","res6","t6","testArray7","res7","t7","testArray6","res4","t4","localHello","it","push","localHelloGan","localHelloSew","setState","labels","backgroundColor","datasets","label","fill","borderColor","options","scales","yAxes","ticks","beginAtZero","scaleLabel","display","labelString","fontSize","catch","err","maintainAspectRatio","height"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport {Bar, Line, Pie} from 'react-chartjs-2';\nimport * as d3 from 'd3';\nimport data from '../dataset/sachin.csv';\nimport dravid from '../dataset/dravid.csv'\nimport ganguly from '../dataset/ganguly.csv'\nimport sehwag from '../dataset/sehwag.csv'\n\nclass Chart extends Component{\n    constructor(props) {\n        super(props)\n        this.state={};\n    }\n\n    componentDidMount() {\n        let currentComponent = this;\n        var hello;\n        var hellogan;\n        var hellosew;\n        //dravid\n        d3.csv(dravid).then(function(data) {\n            //console.log('dravid sir data'+data)\n            var colbatt1 = data.map(function(d) {\n                return {\n\n                    Runs: d.Runs\n                }\n            })\n            console.log('dravid ka maal')\n            console.log(colbatt1)\n            var testArraydr=Object.entries(colbatt1).slice(0,49).map(entry => entry[1].Runs);\n            let resdr=testArraydr.filter(x=>!isNaN(x))\n            var t1dr=0\n            for(var at of resdr){\n                t1dr +=parseInt(at);\n            }\n            t1dr=t1dr/testArraydr.length\n            console.log('first avg of dravid sir'+t1dr)\n\n            var testArraydr1=Object.entries(colbatt1).slice(50,99).map(entry => entry[1].Runs);\n            let resdr1=testArraydr1.filter(x=>!isNaN(x))\n            var t1dr1=0\n            for(var at of resdr1){\n                t1dr1 +=parseInt(at);\n            }\n            t1dr1=t1dr1/testArraydr.length\n            console.log('first avg of dravid sir'+t1dr1)\n\n\n            var testArraydr2=Object.entries(colbatt1).slice(100,149).map(entry => entry[1].Runs);\n            let resdr2=testArraydr2.filter(x=>!isNaN(x))\n            var t1dr2=0\n            for(var at of resdr2){\n                t1dr2 +=parseInt(at);\n            }\n            t1dr2=t1dr2/testArraydr.length\n            console.log('first avg of dravid sir'+t1dr2)\n\n\n            var testArraydr3=Object.entries(colbatt1).slice(150,199).map(entry => entry[1].Runs);\n            let resdr3=testArraydr3.filter(x=>!isNaN(x))\n            var t1dr3=0\n            for(var at of resdr3){\n                t1dr3 +=parseInt(at);\n            }\n            t1dr3=t1dr3/testArraydr.length\n            console.log('first avg of dravid sir'+t1dr3)\n\n            var testArraydr4=Object.entries(colbatt1).slice(200,249).map(entry => entry[1].Runs);\n            let resdr4=testArraydr4.filter(x=>!isNaN(x))\n            var t1dr4=0\n            for(var at of resdr4){\n                t1dr4 +=parseInt(at);\n            }\n            t1dr4=t1dr4/testArraydr.length\n            console.log('first avg of dravid sir'+t1dr4)\n\n            var testArraydr5=Object.entries(colbatt1).slice(249,295).map(entry => entry[1].Runs);\n            let resdr5=testArraydr5.filter(x=>!isNaN(x))\n            var t1dr5=0\n            for(var at of resdr5){\n                t1dr5 +=parseInt(at);\n            }\n            t1dr5=t1dr5/testArraydr.length\n            console.log('first avg of dravid sir'+t1dr5)\n            hello=[t1dr,t1dr1,t1dr2,t1dr3,t1dr4,t1dr5]\n            console.log('Dravid ka maal')\n\n        });\n\n        //gangully\n        d3.csv(ganguly).then(function(data) {\n            //console.log('dravid sir data'+data)\n            var colbatt2 = data.map(function(d) {\n                return {\n\n                    Runs: d.Runs\n                }\n            })\n            console.log('gangully ka maal')\n            console.log(colbatt2)\n            var testArraygu=Object.entries(colbatt2).slice(0,49).map(entry => entry[1].Runs);\n            let resgu=testArraygu.filter(x=>!isNaN(x))\n            var t1gu=0\n            for(var at of resgu){\n                t1gu +=parseInt(at);\n            }\n            t1gu=t1gu/testArraygu.length\n            console.log('first avg of dravid sir'+t1gu)\n\n            var testArraygu1=Object.entries(colbatt2).slice(50,99).map(entry => entry[1].Runs);\n            let resgu1=testArraygu1.filter(x=>!isNaN(x))\n            var t1gu1=0\n            for(var at of resgu1){\n                t1gu1 +=parseInt(at);\n            }\n            t1gu1=t1gu1/testArraygu1.length\n            console.log('first avg of dravid sir'+t1gu1)\n\n\n            var testArraygu2=Object.entries(colbatt2).slice(100,149).map(entry => entry[1].Runs);\n            let resgu2=testArraygu2.filter(x=>!isNaN(x))\n            var t1gu2=0\n            for(var at of resgu2){\n                t1gu2 +=parseInt(at);\n            }\n            t1gu2=t1gu2/testArraygu2.length\n            console.log('first avg of dravid sir'+t1gu2)\n\n\n            var testArraygu3=Object.entries(colbatt2).slice(150,169).map(entry => entry[1].Runs);\n            let resgu3=testArraygu3.filter(x=>!isNaN(x))\n            var t1gu3=0\n            for(var at of resgu3){\n                t1gu3 +=parseInt(at);\n            }\n            t1gu3=t1gu3/testArraygu3.length\n            console.log('first avg of ganguly sir'+t1gu3)\n\n\n            var testArraygu4=Object.entries(colbatt2).slice(170,189).map(entry => entry[1].Runs);\n            let resgu4=testArraygu4.filter(x=>!isNaN(x))\n            var t1gu4=0\n            for(var at of resgu4){\n                t1gu4 +=parseInt(at);\n            }\n            t1gu4=t1gu4/testArraygu4.length\n            console.log('first avg of ganguly sir'+t1gu4)\n\n            var testArraygu5=Object.entries(colbatt2).slice(190,201).map(entry => entry[1].Runs);\n            let resgu5=testArraygu5.filter(x=>!isNaN(x))\n            var t1gu5=0\n            for(var at of resgu5){\n                t1gu5 +=parseInt(at);\n            }\n            t1gu5=t1gu5/testArraygu5.length\n            console.log('first avg of ganguly sir'+t1gu5)\n\n            hellogan=[t1gu,t1gu1,t1gu2,t1gu3,t1gu4,t1gu5]\n            console.log('gangully ka maal')\n\n        });\n\n        //Sehwag\n        d3.csv(sehwag).then(function(data) {\n            //console.log('dravid sir data'+data)\n            var colbatt3 = data.map(function(d) {\n                return {\n\n                    Runs: d.Runs\n                }\n            })\n            console.log('sehwag ka maal')\n            console.log(colbatt3)\n            var testArrayse=Object.entries(colbatt3).slice(0,29).map(entry => entry[1].Runs);\n            let resse=testArrayse.filter(x=>!isNaN(x))\n            var t1se=0\n            for(var at of resse){\n                t1se +=parseInt(at);\n            }\n            t1se=t1se/testArrayse.length\n            console.log('first avg of dravid sir'+t1se)\n\n            var testArrayse1=Object.entries(colbatt3).slice(30,59).map(entry => entry[1].Runs);\n            let resse1=testArrayse1.filter(x=>!isNaN(x))\n            var t1se1=0\n            for(var at of resse1){\n                t1se1 +=parseInt(at);\n            }\n            t1se1=t1se1/testArrayse1.length\n            console.log('first avg of dravid sir'+t1se1)\n\n\n            var testArrayse2=Object.entries(colbatt3).slice(60,99).map(entry => entry[1].Runs);\n            let resse2=testArrayse2.filter(x=>!isNaN(x))\n            var t1se2=0\n            for(var at of resse2){\n                t1se2 +=parseInt(at);\n            }\n            t1se2=t1se2/testArrayse2.length\n            console.log('first avg of dravid sir'+t1se2)\n\n\n            var testArrayse3=Object.entries(colbatt3).slice(100,129).map(entry => entry[1].Runs);\n            let resse3=testArrayse3.filter(x=>!isNaN(x))\n            var t1se3=0\n            for(var at of resse3){\n                t1se3 +=parseInt(at);\n            }\n            t1se3=t1se3/testArrayse3.length\n            console.log('first avg of ganguly sir'+t1se3)\n\n\n            var testArrayse4=Object.entries(colbatt3).slice(130,159).map(entry => entry[1].Runs);\n            let resse4=testArrayse4.filter(x=>!isNaN(x))\n            var t1se4=0\n            for(var at of resse4){\n                t1se4 +=parseInt(at);\n            }\n            t1se4=t1se4/testArrayse4.length\n            console.log('first avg of ganguly sir'+t1se4)\n\n            var testArrayse5=Object.entries(colbatt3).slice(160,177).map(entry => entry[1].Runs);\n            let resse5=testArrayse5.filter(x=>!isNaN(x))\n            var t1se5=0\n            for(var at of resse5){\n                t1se5 +=parseInt(at);\n            }\n            t1se5=t1se5/testArrayse5.length\n            console.log('first avg of sehwag sir'+t1se5)\n\n            hellosew=[t1se,t1se1,t1se2,t1se3,t1se4,t1se5]\n            console.log('hello sehwag'+hellosew)\n            console.log('sehwag ka maal')\n        });\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        //sachin\n        d3.csv(data).then(function(data) {\n\n            var colbatt = data.map(function(d) {\n                return {\n\n                    col0: d.batting_score[0]\n                }\n            });\n\n\n         var testArray=Object.entries(colbatt).slice(0,99).map(entry => entry[1].col0);\n            let res=testArray.filter(x=>!isNaN(x))\n            var t1=0\n            for(var at of res){\n                 t1 +=parseInt(at);\n            }\n            t1=t1/testArray.length\n            console.log(t1)\n\n            var testArray3=Object.entries(colbatt).slice(150,249).map(entry => entry[1].col0);\n            let res5=testArray3.filter(x=>!isNaN(x))\n            var t5=0\n            for(var at of res5){\n                t5 +=parseInt(at);\n            }\n            t5=t5/testArray3.length\n            console.log(t5)\n\n\n\n            var testArray2=Object.entries(colbatt).slice(100,149).map(entry => entry[1].col0);\n            let res2=testArray2.filter(x=>!isNaN(x))\n            var t2=0\n            for(var at of res2){\n                t2 +=parseInt(at);\n            }\n            t2=t2/testArray2.length\n            console.log(t2)\n\n            var testArray5=Object.entries(colbatt).slice(401,463).map(entry => entry[1].col0);\n            let res6=testArray5.filter(x=>!isNaN(x))\n            var t6=0\n            for(var at of res6){\n                t6 +=parseInt(at);\n            }\n            t6=t6/testArray5.length\n            console.log(t6)\n\n\n            var testArray7=Object.entries(colbatt).slice(250,300).map(entry => entry[1].col0);\n            let res7=testArray7.filter(x=>!isNaN(x))\n            var t7=0\n            for(var at of res7){\n                t7 +=parseInt(at);\n            }\n            t7=t7/testArray7.length\n              console.log(t7)\n\n            var testArray6=Object.entries(colbatt).slice(301,400).map(entry => entry[1].col0);\n\n            let res4=testArray6.filter(x=>!isNaN(x))\n            var t4=0\n            for(var at of res4){\n                t4 +=parseInt(at);\n            }\n            t4=t4/testArray6.length\n            console.log(t4)\n\n\n            var localHello=[];\n            for(var it of hello){\n                localHello.push(it)\n            }\n            console.log(localHello)\n\n            var localHelloGan=[];\n            for(var it of hellogan){\n                localHelloGan.push(it)\n            }\n            console.log(localHelloGan)\n\n            var localHelloSew=[];\n            for(var it of hellosew){\n                localHelloSew.push(it)\n            }\n            console.log('hello from above'+localHelloSew)\n            currentComponent.setState({\n                data: {\n                    labels: ['1989-1995', '1995-1997', '1997-2000', '2000-2002', '2003-2007', '2007-2012'],\n                    backgroundColor: '#23BFAA',\n                    datasets: [\n                        {\n                            label: \"Sachin\",\n                            fill: false,\n                            borderColor: \"rgba(32, 162, 219)\", // <-- supposed to be light blue\n                            data: [t1 * 10, t2 * 10, t5 * 10, t7 * 10, t4 * 10, t6 * 10],\n                        },\n                        {\n                            label: \"Dravid\",\n                            fill: false,\n                            borderColor: \"rgba(196, 93, 105)\",\n                            data: localHello,\n                        },\n                        {\n                            label: \"Gangully\",\n                            fill: false,\n                            borderColor: \"rgba(0,0,255)\",\n                            data: localHelloGan,\n                        },\n                        {\n                            label: \"Sehwag\",\n                            fill: false,\n                            borderColor: \"rgba(255,127,80)\",\n                            data: localHelloSew,\n                        }\n\n\n                    ]\n\n\n                },\n                options: {\n                    scales: {\n                        yAxes: [{\n                            ticks: {\n                                beginAtZero: true\n                            },\n                            scaleLabel: {\n                                display: true,\n                                labelString: 'Moola',\n                                fontSize: 20\n                            }\n                        }]\n                    }\n                }\n\n                }\n                )\n        }).catch(function(err) {\n            console.log(err)\n        })\n\n\n    }\n\n\n\n\n    render() {\n        const {data}=this.state;\n\n        return (\n            <div className='container'>\n            <div className=\"chart\">\n                <Line\n                    data={data}\n                    width={50}\n                    height={500}\n                    options={{ maintainAspectRatio: false }}\n                />\n            </div>\n            <div style={{height:300}}>\n\n                <h1>hello</h1>            </div>\n            </div>\n        );\n    }\n}\nexport default  Chart;"]},"metadata":{},"sourceType":"module"}