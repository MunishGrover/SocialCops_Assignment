{"ast":null,"code":"import _classCallCheck from \"/home/munishgrover/sachin_dashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/munishgrover/sachin_dashboard/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/munishgrover/sachin_dashboard/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/munishgrover/sachin_dashboard/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/munishgrover/sachin_dashboard/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/munishgrover/sachin_dashboard/src/components/Chart.js\";\nimport React, { Component } from 'react';\nimport { Bar, Line, Pie } from 'react-chartjs-2';\nimport * as d3 from 'd3';\nimport data from '../dataset/sachin.csv';\nimport dravid from '../dataset/dravid.csv';\n\nvar Chart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Chart, _Component);\n\n  function Chart(props) {\n    var _this;\n\n    _classCallCheck(this, Chart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chart).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Chart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var currentComponent = this;\n      var hello; //dravid\n\n      d3.csv(dravid).then(function (data) {\n        //console.log('dravid sir data'+data)\n        var colbatt1 = data.map(function (d) {\n          return {\n            Runs: d.Runs\n          };\n        });\n        console.log('dravid ka maal');\n        console.log(colbatt1);\n        var testArraydr = Object.entries(colbatt1).slice(0, 49).map(function (entry) {\n          return entry[1].Runs;\n        });\n        var resdr = testArraydr.filter(function (x) {\n          return !isNaN(x);\n        });\n        var t1dr = 0;\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = resdr[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var at = _step.value;\n            t1dr += parseInt(at);\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        t1dr = t1dr / testArraydr.length;\n        console.log('first avg of dravid sir' + t1dr);\n        var testArraydr1 = Object.entries(colbatt1).slice(50, 99).map(function (entry) {\n          return entry[1].Runs;\n        });\n        var resdr1 = testArraydr1.filter(function (x) {\n          return !isNaN(x);\n        });\n        var t1dr1 = 0;\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = resdr1[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var at = _step2.value;\n            t1dr1 += parseInt(at);\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n\n        t1dr1 = t1dr1 / testArraydr.length;\n        console.log('first avg of dravid sir' + t1dr1);\n        var testArraydr2 = Object.entries(colbatt1).slice(100, 149).map(function (entry) {\n          return entry[1].Runs;\n        });\n        var resdr2 = testArraydr2.filter(function (x) {\n          return !isNaN(x);\n        });\n        var t1dr2 = 0;\n        var _iteratorNormalCompletion3 = true;\n        var _didIteratorError3 = false;\n        var _iteratorError3 = undefined;\n\n        try {\n          for (var _iterator3 = resdr2[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n            var at = _step3.value;\n            t1dr2 += parseInt(at);\n          }\n        } catch (err) {\n          _didIteratorError3 = true;\n          _iteratorError3 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n              _iterator3.return();\n            }\n          } finally {\n            if (_didIteratorError3) {\n              throw _iteratorError3;\n            }\n          }\n        }\n\n        t1dr2 = t1dr2 / testArraydr.length;\n        console.log('first avg of dravid sir' + t1dr2);\n        var testArraydr3 = Object.entries(colbatt1).slice(150, 199).map(function (entry) {\n          return entry[1].Runs;\n        });\n        var resdr3 = testArraydr3.filter(function (x) {\n          return !isNaN(x);\n        });\n        var t1dr3 = 0;\n        var _iteratorNormalCompletion4 = true;\n        var _didIteratorError4 = false;\n        var _iteratorError4 = undefined;\n\n        try {\n          for (var _iterator4 = resdr3[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n            var at = _step4.value;\n            t1dr3 += parseInt(at);\n          }\n        } catch (err) {\n          _didIteratorError4 = true;\n          _iteratorError4 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n              _iterator4.return();\n            }\n          } finally {\n            if (_didIteratorError4) {\n              throw _iteratorError4;\n            }\n          }\n        }\n\n        t1dr3 = t1dr3 / testArraydr.length;\n        console.log('first avg of dravid sir' + t1dr3);\n        var testArraydr4 = Object.entries(colbatt1).slice(200, 249).map(function (entry) {\n          return entry[1].Runs;\n        });\n        var resdr4 = testArraydr4.filter(function (x) {\n          return !isNaN(x);\n        });\n        var t1dr4 = 0;\n        var _iteratorNormalCompletion5 = true;\n        var _didIteratorError5 = false;\n        var _iteratorError5 = undefined;\n\n        try {\n          for (var _iterator5 = resdr4[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n            var at = _step5.value;\n            t1dr4 += parseInt(at);\n          }\n        } catch (err) {\n          _didIteratorError5 = true;\n          _iteratorError5 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n              _iterator5.return();\n            }\n          } finally {\n            if (_didIteratorError5) {\n              throw _iteratorError5;\n            }\n          }\n        }\n\n        t1dr4 = t1dr4 / testArraydr.length;\n        console.log('first avg of dravid sir' + t1dr4);\n        var testArraydr5 = Object.entries(colbatt1).slice(249, 295).map(function (entry) {\n          return entry[1].Runs;\n        });\n        var resdr5 = testArraydr5.filter(function (x) {\n          return !isNaN(x);\n        });\n        var t1dr5 = 0;\n        var _iteratorNormalCompletion6 = true;\n        var _didIteratorError6 = false;\n        var _iteratorError6 = undefined;\n\n        try {\n          for (var _iterator6 = resdr5[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n            var at = _step6.value;\n            t1dr5 += parseInt(at);\n          }\n        } catch (err) {\n          _didIteratorError6 = true;\n          _iteratorError6 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n              _iterator6.return();\n            }\n          } finally {\n            if (_didIteratorError6) {\n              throw _iteratorError6;\n            }\n          }\n        }\n\n        t1dr5 = t1dr5 / testArraydr.length;\n        console.log('first avg of dravid sir' + t1dr5);\n        hello = [t1dr, t1dr1, t1dr2, t1dr3, t1dr4, t1dr5];\n        console.log('Dravid ka maal');\n      }); //sachin\n\n      d3.csv(data).then(function (data) {\n        var colbatt = data.map(function (d) {\n          return {\n            col0: d.batting_score[0]\n          };\n        });\n        var testArray = Object.entries(colbatt).slice(0, 99).map(function (entry) {\n          return entry[1].col0;\n        });\n        var res = testArray.filter(function (x) {\n          return !isNaN(x);\n        });\n        var t1 = 0;\n        var _iteratorNormalCompletion7 = true;\n        var _didIteratorError7 = false;\n        var _iteratorError7 = undefined;\n\n        try {\n          for (var _iterator7 = res[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n            var at = _step7.value;\n            t1 += parseInt(at);\n          }\n        } catch (err) {\n          _didIteratorError7 = true;\n          _iteratorError7 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n              _iterator7.return();\n            }\n          } finally {\n            if (_didIteratorError7) {\n              throw _iteratorError7;\n            }\n          }\n        }\n\n        t1 = t1 / testArray.length;\n        console.log(t1);\n        var testArray3 = Object.entries(colbatt).slice(150, 249).map(function (entry) {\n          return entry[1].col0;\n        });\n        var res5 = testArray3.filter(function (x) {\n          return !isNaN(x);\n        });\n        var t5 = 0;\n        var _iteratorNormalCompletion8 = true;\n        var _didIteratorError8 = false;\n        var _iteratorError8 = undefined;\n\n        try {\n          for (var _iterator8 = res5[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n            var at = _step8.value;\n            t5 += parseInt(at);\n          }\n        } catch (err) {\n          _didIteratorError8 = true;\n          _iteratorError8 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n              _iterator8.return();\n            }\n          } finally {\n            if (_didIteratorError8) {\n              throw _iteratorError8;\n            }\n          }\n        }\n\n        t5 = t5 / testArray3.length;\n        console.log(t5);\n        var testArray2 = Object.entries(colbatt).slice(100, 149).map(function (entry) {\n          return entry[1].col0;\n        });\n        var res2 = testArray2.filter(function (x) {\n          return !isNaN(x);\n        });\n        var t2 = 0;\n        var _iteratorNormalCompletion9 = true;\n        var _didIteratorError9 = false;\n        var _iteratorError9 = undefined;\n\n        try {\n          for (var _iterator9 = res2[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n            var at = _step9.value;\n            t2 += parseInt(at);\n          }\n        } catch (err) {\n          _didIteratorError9 = true;\n          _iteratorError9 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion9 && _iterator9.return != null) {\n              _iterator9.return();\n            }\n          } finally {\n            if (_didIteratorError9) {\n              throw _iteratorError9;\n            }\n          }\n        }\n\n        t2 = t2 / testArray2.length;\n        console.log(t2);\n        var testArray5 = Object.entries(colbatt).slice(401, 463).map(function (entry) {\n          return entry[1].col0;\n        });\n        var res6 = testArray5.filter(function (x) {\n          return !isNaN(x);\n        });\n        var t6 = 0;\n        var _iteratorNormalCompletion10 = true;\n        var _didIteratorError10 = false;\n        var _iteratorError10 = undefined;\n\n        try {\n          for (var _iterator10 = res6[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n            var at = _step10.value;\n            t6 += parseInt(at);\n          }\n        } catch (err) {\n          _didIteratorError10 = true;\n          _iteratorError10 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion10 && _iterator10.return != null) {\n              _iterator10.return();\n            }\n          } finally {\n            if (_didIteratorError10) {\n              throw _iteratorError10;\n            }\n          }\n        }\n\n        t6 = t6 / testArray5.length;\n        console.log(t6);\n        var testArray7 = Object.entries(colbatt).slice(250, 300).map(function (entry) {\n          return entry[1].col0;\n        });\n        var res7 = testArray7.filter(function (x) {\n          return !isNaN(x);\n        });\n        var t7 = 0;\n        var _iteratorNormalCompletion11 = true;\n        var _didIteratorError11 = false;\n        var _iteratorError11 = undefined;\n\n        try {\n          for (var _iterator11 = res7[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n            var at = _step11.value;\n            t7 += parseInt(at);\n          }\n        } catch (err) {\n          _didIteratorError11 = true;\n          _iteratorError11 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion11 && _iterator11.return != null) {\n              _iterator11.return();\n            }\n          } finally {\n            if (_didIteratorError11) {\n              throw _iteratorError11;\n            }\n          }\n        }\n\n        t7 = t7 / testArray7.length;\n        console.log(t7);\n        var testArray6 = Object.entries(colbatt).slice(301, 400).map(function (entry) {\n          return entry[1].col0;\n        });\n        var res4 = testArray6.filter(function (x) {\n          return !isNaN(x);\n        });\n        var t4 = 0;\n        var _iteratorNormalCompletion12 = true;\n        var _didIteratorError12 = false;\n        var _iteratorError12 = undefined;\n\n        try {\n          for (var _iterator12 = res4[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n            var at = _step12.value;\n            t4 += parseInt(at);\n          }\n        } catch (err) {\n          _didIteratorError12 = true;\n          _iteratorError12 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion12 && _iterator12.return != null) {\n              _iterator12.return();\n            }\n          } finally {\n            if (_didIteratorError12) {\n              throw _iteratorError12;\n            }\n          }\n        }\n\n        t4 = t4 / testArray6.length;\n        console.log(t4);\n        var localHello = [];\n        var _iteratorNormalCompletion13 = true;\n        var _didIteratorError13 = false;\n        var _iteratorError13 = undefined;\n\n        try {\n          for (var _iterator13 = hello[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n            var it = _step13.value;\n            localHello.push(it);\n          }\n        } catch (err) {\n          _didIteratorError13 = true;\n          _iteratorError13 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion13 && _iterator13.return != null) {\n              _iterator13.return();\n            }\n          } finally {\n            if (_didIteratorError13) {\n              throw _iteratorError13;\n            }\n          }\n        }\n\n        console.log(localHello);\n        currentComponent.setState({\n          data: {\n            labels: ['1989-1995', '1995-1997', '1997-2000', '2000-2002', '2003-2007', '2007-2012'],\n            backgroundColor: '#23BFAA',\n            datasets: [{\n              label: \"Sachin\",\n              fill: true,\n              backgroundColor: \"rgba(32, 162, 219, 0.3)\",\n              // <-- supposed to be light blue\n              data: [t1, t2, t5, t7, t4, t6]\n            }, {\n              label: \"Red\",\n              fill: true,\n              backgroundColor: \"rgba(196, 93, 105, 0.3)\",\n              data: localHello\n            }]\n          }\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n      /*d3.csv(dravid).then(function(data) {\n          console.log('dravid sir data'+data)\n          var colbatt1 = data.map(function(d) {\n              return {\n                   Runs: d.Runs\n              }\n          })\n          currentComponent.setState({datadravid: [1,2,3,4]\n                  /!*!/!*labels: ['1989-1995','1995-1997','1997-2000','2000-2002','2003-2007','2007-2012'],\n                  backgroundColor: '#23BFAA',\n                  *!/datasets:[\n                      {\n                          label: \"Red\",\n                          fill: true,\n                          backgroundColor: \"rgba(196, 93, 105, 0.3)\",\n                          data: [4,5,6,7],\n                      }\n                   ]*!/\n                })\n       });\n      */\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var data = this.state.data;\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(Line, {\n        data: data,\n        width: 50,\n        height: 500,\n        options: {\n          maintainAspectRatio: false\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        style: {\n          height: 300\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(Line, {\n        data: [1, 2, 3],\n        width: 50,\n        height: 500,\n        options: {\n          maintainAspectRatio: false\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Chart;\n}(Component);\n\nexport default Chart;","map":{"version":3,"sources":["/home/munishgrover/sachin_dashboard/src/components/Chart.js"],"names":["React","Component","Bar","Line","Pie","d3","data","dravid","Chart","props","state","currentComponent","hello","csv","then","colbatt1","map","d","Runs","console","log","testArraydr","Object","entries","slice","entry","resdr","filter","x","isNaN","t1dr","at","parseInt","length","testArraydr1","resdr1","t1dr1","testArraydr2","resdr2","t1dr2","testArraydr3","resdr3","t1dr3","testArraydr4","resdr4","t1dr4","testArraydr5","resdr5","t1dr5","colbatt","col0","batting_score","testArray","res","t1","testArray3","res5","t5","testArray2","res2","t2","testArray5","res6","t6","testArray7","res7","t7","testArray6","res4","t4","localHello","it","push","setState","labels","backgroundColor","datasets","label","fill","catch","err","maintainAspectRatio","height"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport {Bar, Line, Pie} from 'react-chartjs-2';\nimport * as d3 from 'd3';\nimport data from '../dataset/sachin.csv';\nimport dravid from '../dataset/dravid.csv'\n\n\n\nclass Chart extends Component{\n    constructor(props) {\n        super(props)\n        this.state={};\n    }\n\n    componentDidMount() {\n        let currentComponent = this;\n        var hello;\n        //dravid\n        d3.csv(dravid).then(function(data) {\n            //console.log('dravid sir data'+data)\n            var colbatt1 = data.map(function(d) {\n                return {\n\n                    Runs: d.Runs\n                }\n            })\n            console.log('dravid ka maal')\n            console.log(colbatt1)\n            var testArraydr=Object.entries(colbatt1).slice(0,49).map(entry => entry[1].Runs);\n            let resdr=testArraydr.filter(x=>!isNaN(x))\n            var t1dr=0\n            for(var at of resdr){\n                t1dr +=parseInt(at);\n            }\n            t1dr=t1dr/testArraydr.length\n            console.log('first avg of dravid sir'+t1dr)\n\n            var testArraydr1=Object.entries(colbatt1).slice(50,99).map(entry => entry[1].Runs);\n            let resdr1=testArraydr1.filter(x=>!isNaN(x))\n            var t1dr1=0\n            for(var at of resdr1){\n                t1dr1 +=parseInt(at);\n            }\n            t1dr1=t1dr1/testArraydr.length\n            console.log('first avg of dravid sir'+t1dr1)\n\n\n            var testArraydr2=Object.entries(colbatt1).slice(100,149).map(entry => entry[1].Runs);\n            let resdr2=testArraydr2.filter(x=>!isNaN(x))\n            var t1dr2=0\n            for(var at of resdr2){\n                t1dr2 +=parseInt(at);\n            }\n            t1dr2=t1dr2/testArraydr.length\n            console.log('first avg of dravid sir'+t1dr2)\n\n\n            var testArraydr3=Object.entries(colbatt1).slice(150,199).map(entry => entry[1].Runs);\n            let resdr3=testArraydr3.filter(x=>!isNaN(x))\n            var t1dr3=0\n            for(var at of resdr3){\n                t1dr3 +=parseInt(at);\n            }\n            t1dr3=t1dr3/testArraydr.length\n            console.log('first avg of dravid sir'+t1dr3)\n\n            var testArraydr4=Object.entries(colbatt1).slice(200,249).map(entry => entry[1].Runs);\n            let resdr4=testArraydr4.filter(x=>!isNaN(x))\n            var t1dr4=0\n            for(var at of resdr4){\n                t1dr4 +=parseInt(at);\n            }\n            t1dr4=t1dr4/testArraydr.length\n            console.log('first avg of dravid sir'+t1dr4)\n\n            var testArraydr5=Object.entries(colbatt1).slice(249,295).map(entry => entry[1].Runs);\n            let resdr5=testArraydr5.filter(x=>!isNaN(x))\n            var t1dr5=0\n            for(var at of resdr5){\n                t1dr5 +=parseInt(at);\n            }\n            t1dr5=t1dr5/testArraydr.length\n            console.log('first avg of dravid sir'+t1dr5)\n\n\n\n\n\n            hello=[t1dr,t1dr1,t1dr2,t1dr3,t1dr4,t1dr5]\n            console.log('Dravid ka maal')\n\n        });\n\n\n        //sachin\n        d3.csv(data).then(function(data) {\n\n            var colbatt = data.map(function(d) {\n                return {\n\n                    col0: d.batting_score[0]\n                }\n            });\n\n\n         var testArray=Object.entries(colbatt).slice(0,99).map(entry => entry[1].col0);\n            let res=testArray.filter(x=>!isNaN(x))\n            var t1=0\n            for(var at of res){\n                 t1 +=parseInt(at);\n            }\n            t1=t1/testArray.length\n            console.log(t1)\n\n            var testArray3=Object.entries(colbatt).slice(150,249).map(entry => entry[1].col0);\n            let res5=testArray3.filter(x=>!isNaN(x))\n            var t5=0\n            for(var at of res5){\n                t5 +=parseInt(at);\n            }\n            t5=t5/testArray3.length\n            console.log(t5)\n\n\n\n            var testArray2=Object.entries(colbatt).slice(100,149).map(entry => entry[1].col0);\n            let res2=testArray2.filter(x=>!isNaN(x))\n            var t2=0\n            for(var at of res2){\n                t2 +=parseInt(at);\n            }\n            t2=t2/testArray2.length\n            console.log(t2)\n\n            var testArray5=Object.entries(colbatt).slice(401,463).map(entry => entry[1].col0);\n            let res6=testArray5.filter(x=>!isNaN(x))\n            var t6=0\n            for(var at of res6){\n                t6 +=parseInt(at);\n            }\n            t6=t6/testArray5.length\n            console.log(t6)\n\n\n            var testArray7=Object.entries(colbatt).slice(250,300).map(entry => entry[1].col0);\n            let res7=testArray7.filter(x=>!isNaN(x))\n            var t7=0\n            for(var at of res7){\n                t7 +=parseInt(at);\n            }\n            t7=t7/testArray7.length\n              console.log(t7)\n\n            var testArray6=Object.entries(colbatt).slice(301,400).map(entry => entry[1].col0);\n\n            let res4=testArray6.filter(x=>!isNaN(x))\n            var t4=0\n            for(var at of res4){\n                t4 +=parseInt(at);\n            }\n            t4=t4/testArray6.length\n            console.log(t4)\n\n\n            var localHello=[];\n            for(var it of hello){\n                localHello.push(it)\n            }\n            console.log(localHello)\n            currentComponent.setState({data:{\n                    labels: ['1989-1995','1995-1997','1997-2000','2000-2002','2003-2007','2007-2012'],\n                  backgroundColor: '#23BFAA',\n                    datasets:[\n                        {\n                            label: \"Sachin\",\n                            fill: true,\n                            backgroundColor: \"rgba(32, 162, 219, 0.3)\", // <-- supposed to be light blue\n                            data: [t1,t2,t5,t7,t4,t6],\n                        },\n                        {\n                            label: \"Red\",\n                            fill: true,\n                            backgroundColor: \"rgba(196, 93, 105, 0.3)\",\n                            data: localHello,\n                        }\n\n                    ]\n\n\n                }})\n        }).catch(function(err) {\n            console.log(err)\n        })\n\n        /*d3.csv(dravid).then(function(data) {\n            console.log('dravid sir data'+data)\n            var colbatt1 = data.map(function(d) {\n                return {\n\n                    Runs: d.Runs\n                }\n            })\n            currentComponent.setState({datadravid: [1,2,3,4]\n                    /!*!/!*labels: ['1989-1995','1995-1997','1997-2000','2000-2002','2003-2007','2007-2012'],\n                    backgroundColor: '#23BFAA',\n                    *!/datasets:[\n                        {\n                            label: \"Red\",\n                            fill: true,\n                            backgroundColor: \"rgba(196, 93, 105, 0.3)\",\n                            data: [4,5,6,7],\n                        }\n\n                    ]*!/\n\n\n                })\n\n        });\n*/\n    }\n\n\n\n\n    render() {\n        const {data}=this.state;\n\n        return (\n            <div className='container'>\n            <div className=\"chart\">\n                <Line\n                    data={data}\n                    width={50}\n                    height={500}\n                    options={{ maintainAspectRatio: false }}\n                />\n            </div>\n            <div style={{height:300}}>\n\n                <Line\n                    data={[1,2,3]}\n                    width={50}\n                    height={500}\n                    options={{ maintainAspectRatio: false }}\n                />\n            </div>\n            </div>\n        );\n    }\n}\nexport default  Chart;"]},"metadata":{},"sourceType":"module"}