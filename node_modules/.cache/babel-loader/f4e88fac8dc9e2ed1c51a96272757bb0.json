{"ast":null,"code":"import _objectSpread from \"/home/munishgrover/sachin_dashboard/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/munishgrover/sachin_dashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/munishgrover/sachin_dashboard/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/munishgrover/sachin_dashboard/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/munishgrover/sachin_dashboard/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/munishgrover/sachin_dashboard/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/munishgrover/sachin_dashboard/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css'; //import * as d3 from 'd3';\n\nimport { csv } from 'd3-request';\nimport { scaleBand, scaleLinear } from 'd3-scale';\nimport data from './dataset/sachin.csv';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.setState = {};\n    _this.xScale = scaleBand();\n    _this.yScale = scaleLinear();\n    return _this;\n  }\n  /* componentDidMount() {\n   d3.csv(data).then(function(data) {\n           console.log(data[0])\n       }).catch(function(err) {\n           this.setState({})\n       })\n   }*/\n\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      csv(data, function (error, data) {\n        if (error) {\n          _this2.setState({\n            loadError: true\n          });\n        }\n\n        _this2.setState({\n          data: data.map(function (d) {\n            return _objectSpread({}, d, {\n              x: Number(d.batting_score),\n              y: Number(d.wickets)\n            });\n          })\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.loadError) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, \"couldn't load file\");\n      }\n\n      if (!this.state.data) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        style: {\n          background: '#fff',\n          borderRadius: '3px',\n          boxShadow: '0 1 2 0 rgba(0,0,0,0.1)',\n          margin: 12,\n          padding: 24,\n          width: '350px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Birth and death rates of selected countries\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"per 1,000 inhabitants\"), React.createElement(Scatterplot, {\n        data: this.state.data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/munishgrover/sachin_dashboard/src/App.js"],"names":["React","Component","csv","scaleBand","scaleLinear","data","App","props","setState","xScale","yScale","error","loadError","map","d","x","Number","batting_score","y","wickets","state","background","borderRadius","boxShadow","margin","padding","width"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP,C,CACA;;AACA,SAAQC,GAAR,QAAkB,YAAlB;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,UAAvC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;IAGMC,G;;;;;AACF,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,6EAAMA,KAAN;AACA,UAAKC,QAAL,GAAc,EAAd;AACA,UAAKC,MAAL,GAAcN,SAAS,EAAvB;AACA,UAAKO,MAAL,GAAcN,WAAW,EAAzB;AAJe;AAKlB;AAEF;;;;;;;;;;;yCAOsB;AAAA;;AACjBF,MAAAA,GAAG,CAACG,IAAD,EAAO,UAACM,KAAD,EAAQN,IAAR,EAAiB;AACvB,YAAIM,KAAJ,EAAW;AACP,UAAA,MAAI,CAACH,QAAL,CAAc;AAACI,YAAAA,SAAS,EAAE;AAAZ,WAAd;AACH;;AACD,QAAA,MAAI,CAACJ,QAAL,CAAc;AACVH,UAAAA,IAAI,EAAEA,IAAI,CAACQ,GAAL,CAAS,UAAAC,CAAC;AAAA,qCAASA,CAAT;AAAYC,cAAAA,CAAC,EAAEC,MAAM,CAACF,CAAC,CAACG,aAAH,CAArB;AAAwCC,cAAAA,CAAC,EAAEF,MAAM,CAACF,CAAC,CAACK,OAAH;AAAjD;AAAA,WAAV;AADI,SAAd;AAGH,OAPE,CAAH;AAQH;;;6BACQ;AACL,UAAI,KAAKC,KAAL,CAAWR,SAAf,EAA0B;AACtB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAP;AACH;;AACD,UAAI,CAAC,KAAKQ,KAAL,CAAWf,IAAhB,EAAsB;AAClB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AACD,aAAO;AAAK,QAAA,KAAK,EAAE;AACfgB,UAAAA,UAAU,EAAE,MADG;AAEfC,UAAAA,YAAY,EAAE,KAFC;AAGfC,UAAAA,SAAS,EAAE,yBAHI;AAIfC,UAAAA,MAAM,EAAE,EAJO;AAKfC,UAAAA,OAAO,EAAE,EALM;AAMfC,UAAAA,KAAK,EAAE;AANQ,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDARG,EASH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCATG,EAUH,oBAAC,WAAD;AAAa,QAAA,IAAI,EAAE,KAAKN,KAAL,CAAWf,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVG,CAAP;AAYL;;;;EA5CeJ,S;;AA+ClB,eAAeK,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n//import * as d3 from 'd3';\nimport {csv} from 'd3-request';\nimport { scaleBand, scaleLinear } from 'd3-scale'\nimport data from './dataset/sachin.csv';\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props)\n        this.setState={};\n        this.xScale = scaleBand()\n        this.yScale = scaleLinear()\n    }\n\n   /* componentDidMount() {\n    d3.csv(data).then(function(data) {\n            console.log(data[0])\n        }).catch(function(err) {\n            this.setState({})\n        })\n    }*/\n    componentWillMount() {\n        csv(data, (error, data) => {\n            if (error) {\n                this.setState({loadError: true});\n            }\n            this.setState({\n                data: data.map(d => ({...d, x: Number(d.batting_score), y: Number(d.wickets)}))\n            });\n        })\n    }\n    render() {\n        if (this.state.loadError) {\n            return <div>couldn't load file</div>;\n        }\n        if (!this.state.data) {\n            return <div />;\n        }\n        return <div style={{\n            background: '#fff',\n            borderRadius: '3px',\n            boxShadow: '0 1 2 0 rgba(0,0,0,0.1)',\n            margin: 12,\n            padding: 24,\n            width: '350px'\n        }}>\n            <h1>Birth and death rates of selected countries</h1>\n            <h2>per 1,000 inhabitants</h2>\n            <Scatterplot data={this.state.data}/>\n        </div>;\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}