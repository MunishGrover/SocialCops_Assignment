{"ast":null,"code":"import _classCallCheck from \"/home/munishgrover/sachin_dashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/munishgrover/sachin_dashboard/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/munishgrover/sachin_dashboard/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/munishgrover/sachin_dashboard/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/munishgrover/sachin_dashboard/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/munishgrover/sachin_dashboard/src/components/Chart.js\";\nimport React, { Component } from 'react';\nimport { Bar, Line, Pie } from 'react-chartjs-2';\nimport * as d3 from 'd3';\nimport data from '../dataset/sachin.csv';\nimport dravid from '../dataset/dravid.csv';\n\nvar Chart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Chart, _Component);\n\n  function Chart(props) {\n    var _this;\n\n    _classCallCheck(this, Chart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chart).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Chart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var currentComponent = this;\n      d3.csv(data).then(function (data) {\n        console.log(data);\n        var colbatt = data.map(function (d) {\n          return {\n            col0: d.batting_score[0]\n          };\n        });\n        var testArray = Object.entries(colbatt).slice(0, 99).map(function (entry) {\n          return entry[1].col0;\n        });\n        var res = testArray.filter(function (x) {\n          return !isNaN(x);\n        });\n        var t1 = 0;\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = res[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var at = _step.value;\n            t1 += parseInt(at);\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        t1 = t1 / testArray.length;\n        console.log(t1);\n        var testArray3 = Object.entries(colbatt).slice(150, 249).map(function (entry) {\n          return entry[1].col0;\n        });\n        var res5 = testArray3.filter(function (x) {\n          return !isNaN(x);\n        });\n        var t5 = 0;\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = res5[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var at = _step2.value;\n            t5 += parseInt(at);\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n\n        t5 = t5 / testArray3.length;\n        console.log(t5);\n        var testArray2 = Object.entries(colbatt).slice(100, 149).map(function (entry) {\n          return entry[1].col0;\n        });\n        var res2 = testArray2.filter(function (x) {\n          return !isNaN(x);\n        });\n        var t2 = 0;\n        var _iteratorNormalCompletion3 = true;\n        var _didIteratorError3 = false;\n        var _iteratorError3 = undefined;\n\n        try {\n          for (var _iterator3 = res2[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n            var at = _step3.value;\n            t2 += parseInt(at);\n          }\n        } catch (err) {\n          _didIteratorError3 = true;\n          _iteratorError3 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n              _iterator3.return();\n            }\n          } finally {\n            if (_didIteratorError3) {\n              throw _iteratorError3;\n            }\n          }\n        }\n\n        t2 = t2 / testArray2.length;\n        console.log(t2);\n        var testArray5 = Object.entries(colbatt).slice(401, 463).map(function (entry) {\n          return entry[1].col0;\n        });\n        var res6 = testArray5.filter(function (x) {\n          return !isNaN(x);\n        });\n        var t6 = 0;\n        var _iteratorNormalCompletion4 = true;\n        var _didIteratorError4 = false;\n        var _iteratorError4 = undefined;\n\n        try {\n          for (var _iterator4 = res6[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n            var at = _step4.value;\n            t6 += parseInt(at);\n          }\n        } catch (err) {\n          _didIteratorError4 = true;\n          _iteratorError4 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n              _iterator4.return();\n            }\n          } finally {\n            if (_didIteratorError4) {\n              throw _iteratorError4;\n            }\n          }\n        }\n\n        t6 = t6 / testArray5.length;\n        console.log(t6);\n        var testArray7 = Object.entries(colbatt).slice(250, 300).map(function (entry) {\n          return entry[1].col0;\n        });\n        var res7 = testArray7.filter(function (x) {\n          return !isNaN(x);\n        });\n        var t7 = 0;\n        var _iteratorNormalCompletion5 = true;\n        var _didIteratorError5 = false;\n        var _iteratorError5 = undefined;\n\n        try {\n          for (var _iterator5 = res7[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n            var at = _step5.value;\n            t7 += parseInt(at);\n          }\n        } catch (err) {\n          _didIteratorError5 = true;\n          _iteratorError5 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n              _iterator5.return();\n            }\n          } finally {\n            if (_didIteratorError5) {\n              throw _iteratorError5;\n            }\n          }\n        }\n\n        t7 = t7 / testArray7.length;\n        console.log(t7);\n        var testArray6 = Object.entries(colbatt).slice(301, 400).map(function (entry) {\n          return entry[1].col0;\n        });\n        var res4 = testArray6.filter(function (x) {\n          return !isNaN(x);\n        });\n        var t4 = 0;\n        var _iteratorNormalCompletion6 = true;\n        var _didIteratorError6 = false;\n        var _iteratorError6 = undefined;\n\n        try {\n          for (var _iterator6 = res4[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n            var at = _step6.value;\n            t4 += parseInt(at);\n          }\n        } catch (err) {\n          _didIteratorError6 = true;\n          _iteratorError6 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n              _iterator6.return();\n            }\n          } finally {\n            if (_didIteratorError6) {\n              throw _iteratorError6;\n            }\n          }\n        }\n\n        t4 = t4 / testArray6.length;\n        console.log(t4);\n        currentComponent.setState({\n          data: {\n            labels: ['1989-1995', '1995-1997', '1997-2000', '2000-2002', '2003-2007', '2007-2012'],\n            backgroundColor: '#23BFAA',\n            datasets: [{\n              data: [t1, t2, t5, t7, t4, t6],\n              backgroundColor: ['rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)', 'rgba(255, 206, 86, 0.6)', 'rgba(75, 192, 192, 0.6)', 'rgba(153, 102, 255, 0.6)', 'rgba(255, 159, 64, 0.6)', 'rgba(255, 99, 132, 0.6)']\n            }]\n          }\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n      d3.csv(dravid).then(function (data) {\n        console.log('dravid sir data' + data);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var data = this.state.data;\n      return React.createElement(\"div\", {\n        className: \"chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Line, {\n        data: data,\n        width: 50,\n        height: 500,\n        options: {\n          maintainAspectRatio: false\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Chart;\n}(Component);\n\nexport default Chart;","map":{"version":3,"sources":["/home/munishgrover/sachin_dashboard/src/components/Chart.js"],"names":["React","Component","Bar","Line","Pie","d3","data","dravid","Chart","props","state","currentComponent","csv","then","console","log","colbatt","map","d","col0","batting_score","testArray","Object","entries","slice","entry","res","filter","x","isNaN","t1","at","parseInt","length","testArray3","res5","t5","testArray2","res2","t2","testArray5","res6","t6","testArray7","res7","t7","testArray6","res4","t4","setState","labels","backgroundColor","datasets","catch","err","maintainAspectRatio"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport {Bar, Line, Pie} from 'react-chartjs-2';\nimport * as d3 from 'd3';\nimport data from '../dataset/sachin.csv';\nimport dravid from '../dataset/dravid.csv'\n\n\n\nclass Chart extends Component{\n    constructor(props) {\n        super(props)\n        this.state={};\n    }\n\n    componentDidMount() {\n        let currentComponent = this;\n\n        d3.csv(data).then(function(data) {\n            console.log(data)\n            var colbatt = data.map(function(d) {\n                return {\n\n                    col0: d.batting_score[0]\n                }\n            });\n               var testArray=Object.entries(colbatt).slice(0,99).map(entry => entry[1].col0);\n            let res=testArray.filter(x=>!isNaN(x))\n            var t1=0\n            for(var at of res){\n                 t1 +=parseInt(at);\n            }\n            t1=t1/testArray.length\n            console.log(t1)\n\n            var testArray3=Object.entries(colbatt).slice(150,249).map(entry => entry[1].col0);\n            let res5=testArray3.filter(x=>!isNaN(x))\n            var t5=0\n            for(var at of res5){\n                t5 +=parseInt(at);\n            }\n            t5=t5/testArray3.length\n            console.log(t5)\n\n\n\n            var testArray2=Object.entries(colbatt).slice(100,149).map(entry => entry[1].col0);\n            let res2=testArray2.filter(x=>!isNaN(x))\n            var t2=0\n            for(var at of res2){\n                t2 +=parseInt(at);\n            }\n            t2=t2/testArray2.length\n            console.log(t2)\n\n            var testArray5=Object.entries(colbatt).slice(401,463).map(entry => entry[1].col0);\n            let res6=testArray5.filter(x=>!isNaN(x))\n            var t6=0\n            for(var at of res6){\n                t6 +=parseInt(at);\n            }\n            t6=t6/testArray5.length\n            console.log(t6)\n\n\n            var testArray7=Object.entries(colbatt).slice(250,300).map(entry => entry[1].col0);\n            let res7=testArray7.filter(x=>!isNaN(x))\n            var t7=0\n            for(var at of res7){\n                t7 +=parseInt(at);\n            }\n            t7=t7/testArray7.length\n              console.log(t7)\n\n\n\n\n            var testArray6=Object.entries(colbatt).slice(301,400).map(entry => entry[1].col0);\n\n            let res4=testArray6.filter(x=>!isNaN(x))\n            var t4=0\n            for(var at of res4){\n                t4 +=parseInt(at);\n            }\n            t4=t4/testArray6.length\n            console.log(t4)\n\n\n\n\n\n\n\n\n\n            currentComponent.setState({data:{\n                    labels: ['1989-1995','1995-1997','1997-2000','2000-2002','2003-2007','2007-2012'],\n                  backgroundColor: '#23BFAA',\n                    datasets:[\n                        {\n\n                            data:[t1,t2,t5,t7,t4,t6],\n                            backgroundColor:[\n                                'rgba(255, 99, 132, 0.6)',\n                                'rgba(54, 162, 235, 0.6)',\n                                'rgba(255, 206, 86, 0.6)',\n                                'rgba(75, 192, 192, 0.6)',\n                                'rgba(153, 102, 255, 0.6)',\n                                'rgba(255, 159, 64, 0.6)',\n                                'rgba(255, 99, 132, 0.6)'\n                            ]\n                        }\n                    ]\n\n\n                }})\n        }).catch(function(err) {\n            console.log(err)\n        })\n        d3.csv(dravid).then(function(data) {\n            console.log('dravid sir data'+data)\n        });\n\n    }\n\n\n\n\n    render() {\n        const {data}=this.state;\n\n        return (\n            <div className=\"chart\">\n                <Line\n                    data={data}\n                    width={50}\n                    height={500}\n                    options={{ maintainAspectRatio: false }}\n                />\n            </div>\n        );\n    }\n}\nexport default  Chart;"]},"metadata":{},"sourceType":"module"}